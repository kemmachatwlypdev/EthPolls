{"version":3,"sources":["web3.js","components/Chart.js","components/Multichart.js","yesNo.js","multiData.js","App.js","serviceWorker.js","index.js"],"names":["web3","Web3","window","currentProvider","Chart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","chartData","labels","datasets","label","data","noData","yesData","backgroundColor","console","log","test","react_default","a","createElement","className","es","options","title","display","text","legend","Component","defaultProps","MultiChart","results","bcgColors","yesNo","eth","Contract","constant","inputs","name","type","outputs","payable","stateMutability","multiData","App","user","userMessage","pollhash","pollType","pollName","pollDescription","ispublic","colorList","modColorList","allowed","isallowed","spinnerdisplay","votecasted","expiration","yesVotes","noVotes","chart","yesNoDisplay","multiChart","multiDataDisplay","multiDataHTML","voteOptionsHTML","voteChoice","votebtndisplay","o1","o2","o3","o4","o5","searchdisplay","createdisplay","mydisplay","step","option1","option2","option3","option4","option5","hasPassed","isready","buttonText","createspinner","ispublicDisplay","pollTypeDisplay","enterNameDisplay","expirationDisplay","optionsDisplay","allowedDisplay","createpolldisplay","pollHashListYesNo","pollHashListMulti","yesNoHTML","multiHTML","multiPollHashDisplay","dashboardSpinner","getUser","_callee","event","accounts","regenerator_default","wrap","_context","prev","next","getAccounts","sent","setState","enable","t0","alert","mustHave","href","stop","searchPoll","_callee2","status","i","_status","y","newList","x","_context2","methods","pollStatus","from","getDesc","t1","t2","t3","getName","t4","t5","length","allowedmessage","isExpired","components_Chart","parseInt","redraw","t6","t7","t8","t9","t10","t11","slice","Multichart","push","t12","voteYes","_callee3","bool","_context3","vote","send","voteNo","_callee4","_context4","multiVote","_callee5","_context5","nextstep","_callee6","newstep","newPollHash","_accounts","newArr","_newPollHash","_accounts2","_newPollHash2","_accounts3","_newArr","_newPollHash3","_context6","calcPollHash","createPoll","replace","getYesNo","_callee7","hashlist","counter","htmlInnerList","htmlList","_loop","_context8","activePolls","abrupt","key","mark","no","yes","desc","yesNoId","pollhtml","_context7","toString","style","textAlign","onClick","switchDisplay","id","fontSize","splice","marginLeft","marginRight","delegateYield","getMulti","_callee8","_loop2","_context10","tempResults","tempOptions","optionList","_context9","displayDashboard","_callee9","_context11","ID","document","getElementById","_this2","location","reload","placeholder","value","onChange","target","color","maxLength","width","data-counter-label","height","split","fontWeight","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oYAIeA,EAFF,WAAIC,GAAKC,OAAOF,KAAKG,yBCC5BC,cAQF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,UAAW,CACPC,OAAQ,CAAC,KAAK,OACdC,SAAU,CAAC,CACPC,MAAO,QACPC,KAAM,CAACZ,EAAKD,MAAMc,OAAOb,EAAKD,MAAMe,QAAQ,GAC5CC,gBAAgB,CACZ,wBACA,6BAVDf,sEAkBfgB,QAAQC,IAAId,KAAKJ,MAAMc,QACvBG,QAAQC,IAAId,KAAKJ,MAAMe,qDAIvBX,KAAKe,wCAIL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIX,KAAQT,KAAKI,MAAMC,UACnBgB,QAAW,CACPC,MAAO,CACHC,SAAQ,EACRC,KAAM,oBAEVC,OAAQ,CACJF,SAAS,cA7CbG,aAAd/B,EAGKgC,aAAe,CAClBjB,OAAQ,EACRC,QAAS,GAiDFhB,QCtDTiC,cAUF,SAAAA,EAAYhC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4B,IACf/B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8B,GAAAzB,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,UAAW,CACPC,OAAQT,EAAKD,MAAMU,OACnBC,SAAU,CAAC,CACPC,MAAO,QACPC,KAAMZ,EAAKD,MAAMiC,QACjBjB,gBAAgBf,EAAKD,MAAMkC,cARxBjC,sEAefgB,QAAQC,IAAId,KAAKJ,MAAMU,QACvBO,QAAQC,IAAId,KAAKJ,MAAMiC,SACvBhB,QAAQC,IAAId,KAAKJ,MAAMkC,uDAKvB9B,KAAKe,wCAIL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIX,KAAQT,KAAKI,MAAMC,UACnBgB,QAAW,CACPC,MAAO,CACHC,SAAQ,EACRC,KAAM,oBAEVC,OAAQ,CACJF,SAAS,cA9CRG,aAAnBE,EAGKD,aAAe,CAClBrB,OAAQ,GACRuB,QAAS,GACTC,UAAW,IAiDJF,QCiTAG,EAAA,IAAIxC,EAAKyC,IAAIC,SAtW5B,CACC,CACCC,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,GACRC,KAAQ,WAET,CACCD,KAAQ,GACRC,KAAQ,YAGVD,KAAQ,cACRE,QAAW,CACV,CACCF,KAAQ,GACRC,KAAQ,YAGVE,SAAW,EACXC,gBAAmB,OACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,WACRC,KAAQ,YAGVD,KAAQ,aACRE,QAAW,CACV,CACCF,KAAQ,SACRC,KAAQ,QAET,CACCD,KAAQ,WACRC,KAAQ,QAET,CACCD,KAAQ,MACRC,KAAQ,WAET,CACCD,KAAQ,KACRC,KAAQ,WAET,CACCD,KAAQ,QACRC,KAAQ,WAET,CACCD,KAAQ,UACRC,KAAQ,cAGVE,SAAW,EACXC,gBAAmB,OACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,WACRC,KAAQ,YAGVD,KAAQ,aACRE,QAAW,GACXC,SAAW,EACXC,gBAAmB,aACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,WACRC,KAAQ,YAGVD,KAAQ,UACRE,QAAW,CACV,CACCF,KAAQ,GACRC,KAAQ,WAGVE,SAAW,EACXC,gBAAmB,OACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,GACRC,KAAQ,YAGVD,KAAQ,QACRE,QAAW,CACV,CACCF,KAAQ,WACRC,KAAQ,QAET,CACCD,KAAQ,WACRC,KAAQ,QAET,CACCD,KAAQ,UACRC,KAAQ,WAET,CACCD,KAAQ,OACRC,KAAQ,UAET,CACCD,KAAQ,cACRC,KAAQ,UAET,CACCD,KAAQ,WACRC,KAAQ,WAET,CACCD,KAAQ,UACRC,KAAQ,WAET,CACCD,KAAQ,aACRC,KAAQ,WAET,CACCD,KAAQ,QACRC,KAAQ,WAET,CACCD,KAAQ,aACRC,KAAQ,YAGVE,SAAW,EACXC,gBAAmB,OACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,WACRC,KAAQ,YAGVD,KAAQ,UACRE,QAAW,CACV,CACCF,KAAQ,GACRC,KAAQ,WAGVE,SAAW,EACXC,gBAAmB,OACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,WACRC,KAAQ,YAGVD,KAAQ,YACRE,QAAW,CACV,CACCF,KAAQ,GACRC,KAAQ,SAGVE,SAAW,EACXC,gBAAmB,OACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,cACRC,KAAQ,UAET,CACCD,KAAQ,OACRC,KAAQ,UAET,CACCD,KAAQ,WACRC,KAAQ,QAET,CACCD,KAAQ,UACRC,KAAQ,aAET,CACCD,KAAQ,aACRC,KAAQ,YAGVD,KAAQ,aACRE,QAAW,GACXC,SAAW,EACXC,gBAAmB,aACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,OACRC,KAAQ,UAET,CACCD,KAAQ,UACRC,KAAQ,YAGVD,KAAQ,eACRE,QAAW,CACV,CACCF,KAAQ,GACRC,KAAQ,YAGVE,SAAW,EACXC,gBAAmB,OACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,WACRC,KAAQ,WAET,CACCD,KAAQ,aACRC,KAAQ,SAGVD,KAAQ,OACRE,QAAW,GACXC,SAAW,EACXC,gBAAmB,aACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,GACRC,KAAQ,YAGVD,KAAQ,aACRE,QAAW,CACV,CACCF,KAAQ,GACRC,KAAQ,YAGVE,SAAW,EACXC,gBAAmB,OACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,WACRC,KAAQ,WAET,CACCD,KAAQ,UACRC,KAAQ,cAGVD,KAAQ,kBACRE,QAAW,GACXC,SAAW,EACXC,gBAAmB,aACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,GACRC,KAAQ,WAET,CACCD,KAAQ,GACRC,KAAQ,YAGVD,KAAQ,UACRE,QAAW,CACV,CACCF,KAAQ,WACRC,KAAQ,QAET,CACCD,KAAQ,WACRC,KAAQ,QAET,CACCD,KAAQ,UACRC,KAAQ,WAET,CACCD,KAAQ,OACRC,KAAQ,UAET,CACCD,KAAQ,cACRC,KAAQ,UAET,CACCD,KAAQ,WACRC,KAAQ,WAET,CACCD,KAAQ,UACRC,KAAQ,WAET,CACCD,KAAQ,aACRC,KAAQ,WAET,CACCD,KAAQ,QACRC,KAAQ,WAET,CACCD,KAAQ,aACRC,KAAQ,YAGVE,SAAW,EACXC,gBAAmB,OACnBH,KAAQ,aArWM,8CC6VDI,EAAA,IAAIlD,EAAKyC,IAAIC,SA1V5B,CACC,CACCC,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,GACRC,KAAQ,WAET,CACCD,KAAQ,GACRC,KAAQ,YAGVD,KAAQ,cACRE,QAAW,CACV,CACCF,KAAQ,GACRC,KAAQ,YAGVE,SAAW,EACXC,gBAAmB,OACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,WACRC,KAAQ,YAGVD,KAAQ,aACRE,QAAW,CACV,CACCF,KAAQ,SACRC,KAAQ,QAET,CACCD,KAAQ,WACRC,KAAQ,QAET,CACCD,KAAQ,UACRC,KAAQ,YAET,CACCD,KAAQ,UACRC,KAAQ,aAET,CACCD,KAAQ,UACRC,KAAQ,aAET,CACCD,KAAQ,QACRC,KAAQ,YAGVE,SAAW,EACXC,gBAAmB,OACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,WACRC,KAAQ,YAGVD,KAAQ,aACRE,QAAW,GACXC,SAAW,EACXC,gBAAmB,aACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,WACRC,KAAQ,YAGVD,KAAQ,UACRE,QAAW,CACV,CACCF,KAAQ,GACRC,KAAQ,WAGVE,SAAW,EACXC,gBAAmB,OACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,GACRC,KAAQ,YAGVD,KAAQ,QACRE,QAAW,CACV,CACCF,KAAQ,WACRC,KAAQ,QAET,CACCD,KAAQ,WACRC,KAAQ,QAET,CACCD,KAAQ,UACRC,KAAQ,WAET,CACCD,KAAQ,OACRC,KAAQ,UAET,CACCD,KAAQ,cACRC,KAAQ,UAET,CACCD,KAAQ,aACRC,KAAQ,WAET,CACCD,KAAQ,QACRC,KAAQ,WAET,CACCD,KAAQ,aACRC,KAAQ,YAGVE,SAAW,EACXC,gBAAmB,OACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,WACRC,KAAQ,YAGVD,KAAQ,UACRE,QAAW,CACV,CACCF,KAAQ,GACRC,KAAQ,WAGVE,SAAW,EACXC,gBAAmB,OACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,WACRC,KAAQ,YAGVD,KAAQ,YACRE,QAAW,CACV,CACCF,KAAQ,GACRC,KAAQ,SAGVE,SAAW,EACXC,gBAAmB,OACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,OACRC,KAAQ,UAET,CACCD,KAAQ,UACRC,KAAQ,YAGVD,KAAQ,eACRE,QAAW,CACV,CACCF,KAAQ,GACRC,KAAQ,YAGVE,SAAW,EACXC,gBAAmB,OACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,WACRC,KAAQ,WAET,CACCD,KAAQ,aACRC,KAAQ,YAGVD,KAAQ,OACRE,QAAW,GACXC,SAAW,EACXC,gBAAmB,aACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,GACRC,KAAQ,YAGVD,KAAQ,aACRE,QAAW,CACV,CACCF,KAAQ,GACRC,KAAQ,YAGVE,SAAW,EACXC,gBAAmB,OACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,WACRC,KAAQ,WAET,CACCD,KAAQ,UACRC,KAAQ,cAGVD,KAAQ,kBACRE,QAAW,GACXC,SAAW,EACXC,gBAAmB,aACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,cACRC,KAAQ,UAET,CACCD,KAAQ,OACRC,KAAQ,UAET,CACCD,KAAQ,UACRC,KAAQ,YAET,CACCD,KAAQ,UACRC,KAAQ,aAET,CACCD,KAAQ,WACRC,KAAQ,QAET,CACCD,KAAQ,aACRC,KAAQ,YAGVD,KAAQ,aACRE,QAAW,GACXC,SAAW,EACXC,gBAAmB,aACnBH,KAAQ,YAET,CACCH,UAAY,EACZC,OAAU,CACT,CACCC,KAAQ,GACRC,KAAQ,WAET,CACCD,KAAQ,GACRC,KAAQ,YAGVD,KAAQ,UACRE,QAAW,CACV,CACCF,KAAQ,WACRC,KAAQ,QAET,CACCD,KAAQ,WACRC,KAAQ,QAET,CACCD,KAAQ,UACRC,KAAQ,WAET,CACCD,KAAQ,OACRC,KAAQ,UAET,CACCD,KAAQ,cACRC,KAAQ,UAET,CACCD,KAAQ,aACRC,KAAQ,WAET,CACCD,KAAQ,QACRC,KAAQ,WAET,CACCD,KAAQ,aACRC,KAAQ,YAGVE,SAAW,EACXC,gBAAmB,OACnBH,KAAQ,aAzVM,8CC04BDK,6MAj4BbtC,MAAQ,CACNuC,KAAM,GACNC,YAAY,GACZC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,gBAAiB,GACjBC,SAAU,GACVC,UAAW,CAAC,UAAU,UAAU,UAAU,UAAU,WACpDC,aAAc,GACdC,QAAS,GACTC,WAAW,EACXC,eAAgB,OAChBC,WAAY,OACZC,WAAY,EAEZC,SAAU,GACVC,QAAS,GACTC,MAAO,GACPC,aAAc,OAEdvC,QAAS,GACTQ,QAAS,GACTgC,WAAY,GACZC,iBAAkB,OAClBC,cAAe,GACfC,gBAAiB,GACjBC,WAAY,EACZC,eAAgB,OAEhBC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OAEJC,cAAe,UACfC,cAAe,OACfC,UAAW,OAEXC,KAAM,IACNC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,WAAW,EACXC,QAAS,EACTC,WAAY,aACZC,cAAe,OAEfC,gBAAiB,OACjBC,gBAAiB,UACjBC,iBAAkB,OAClBC,kBAAmB,OACnBC,eAAgB,OAChBC,eAAgB,OAChBC,kBAAmB,OAEnBC,kBAAmB,GACnBC,kBAAmB,GACnBC,UAAW,GACXC,UAAW,GACXC,qBAAsB,GACtBC,iBAAkB,UAIpBC,8CAAU,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAC,EAAArF,EAAAsF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEiBnH,EAAKyC,IAAI2E,cAF1B,OAEAN,EAFAG,EAAAI,KAGN/G,EAAKgH,SAAS,CAAClE,KAAM0D,EAAS,KACO,aAAjC9G,EAAKG,gBAAL,MACFD,OAAOF,KAAKG,gBAAgBoH,SAG9BjH,EAAKgH,SAAS,CAACjE,YAAa,kBARtB4D,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAWN3F,QAAQC,IAAR0F,EAAAO,IACAlH,EAAKgH,SAAS,CAAClE,KAAM,KACrB9C,EAAKgH,SAAS,CAACjE,YAAa,KAC5BoE,MAAM,iHACNnH,EAAKgH,SAAS,CAACI,SAAU,wFAA0FjG,EAAAC,EAAAC,cAAA,KAAGgG,KAAK,uBAAR,mBAf7G,yBAAAV,EAAAW,SAAAhB,EAAA,yEAmBViB,iDAAa,SAAAC,EAAOjB,GAAP,IAAAC,EAAAiB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAArB,EAAArF,EAAAsF,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAEcnH,EAAKyC,IAAI2E,cAFvB,UAEHN,EAFGuB,EAAAhB,KAImB,KAAxB/G,EAAKO,MAAMyC,SAJN,CAAA+E,EAAAlB,KAAA,QAKPM,MAAM,iDALCY,EAAAlB,KAAA,mBAOwB,KAAxB7G,EAAKO,MAAM0C,SAPX,CAAA8E,EAAAlB,KAAA,SAQPM,MAAM,gCARCY,EAAAlB,KAAA,oBAUwB,UAAxB7G,EAAKO,MAAM0C,SAVX,CAAA8E,EAAAlB,KAAA,gBAYP7G,EAAKgH,SAAS,CAAC/C,iBAAkB,SAZ1B8D,EAAAlB,KAAA,GAec3E,EAAM8F,QAAQC,WAAWjI,EAAKO,MAAMyC,UAAU1C,KAAK,CACtE4H,KAAM1B,EAAS,KAhBV,eAeDiB,EAfCM,EAAAhB,KAoBP/G,EAAKgH,SAAS,CAACnD,QAAS4D,EAAM,KAC9BzH,EAAKgH,SAAS,CAACpD,SAAU6D,EAAM,MAC/BzH,EAAKgH,SAAS,CAAC5D,SAAUqE,EAAM,WAC/BzH,EAAKgH,SAAS,CAACzD,QAASkE,EAAM,UAvBvBM,EAAAb,GAAAlH,EAAA+H,EAAAlB,KAAA,GAwB+B3E,EAAM8F,QAAQG,QAAQnI,EAAKO,MAAMyC,UAAU1C,OAxB1E,eAAAyH,EAAAK,GAAAL,EAAAhB,KAAAgB,EAAAM,GAAA,CAwBQlF,gBAxBR4E,EAAAK,IAAAL,EAAAb,GAwBFF,SAxBE1G,KAAAyH,EAAAb,GAAAa,EAAAM,IAAAN,EAAAO,GAAAtI,EAAA+H,EAAAlB,KAAA,GAyBwB3E,EAAM8F,QAAQO,QAAQvI,EAAKO,MAAMyC,UAAU1C,OAzBnE,QA4BP,IA5BOyH,EAAAS,GAAAT,EAAAhB,KAAAgB,EAAAU,GAAA,CAyBQvF,SAzBR6E,EAAAS,IAAAT,EAAAO,GAyBFtB,SAzBE1G,KAAAyH,EAAAO,GAAAP,EAAAU,IA0BPzI,EAAKgH,SAAS,CAACjD,aAAc,YAEpB2D,EAAI,EAAGA,EAAI1H,EAAKO,MAAMgD,QAAQmF,OAAQhB,IACzC1H,EAAKO,MAAMgD,QAAQmE,KAAOlB,EAAS,KACrCxG,EAAKgH,SAAS,CAACxD,WAAW,IAC1BxD,EAAKgH,SAAS,CAAC3C,eAAgB,aA/B5B,OAkC2B,IAA9BrE,EAAKO,MAAMgD,QAAQmF,QACrB1I,EAAKgH,SAAS,CAAC3C,eAAgB,YAC/BrE,EAAKgH,SAAS,CAACxD,WAAW,MAEM,IAAzBxD,EAAKO,MAAMiD,WAClBxD,EAAKgH,SAAS,CAAC2B,eAAgB,8CAvC1BZ,EAAAlB,KAAA,GA2CiB3E,EAAM8F,QAAQY,UAAU5I,EAAKO,MAAMyC,UAAU1C,OA3C9D,SA4CW,IA5CXyH,EAAAhB,OA6CL/G,EAAKgH,SAAS,CAAC2B,eAAgB,0BAC/B3I,EAAKgH,SAAS,CAAC3C,eAAgB,UAIjCrE,EAAKgH,SAAS,CAAClD,MAAO3C,EAAAC,EAAAC,cAACwH,EAAD,CAAO/H,QAASgI,SAAS9I,EAAKO,MAAMqD,UAAW/C,OAAQiI,SAAS9I,EAAKO,MAAMsD,SAAUkF,QAAM,MAlD1GhB,EAAAlB,KAAA,oBAoDwB,cAAxB7G,EAAKO,MAAM0C,SApDX,CAAA8E,EAAAlB,KAAA,gBAsDP7G,EAAKgH,SAAS,CAACjD,aAAc,SAtDtBgE,EAAAlB,KAAA,GAyDcjE,EAAUoF,QAAQC,WAAWjI,EAAKO,MAAMyC,UAAU1C,KAAK,CAC1E4H,KAAM1B,EAAS,KA1DV,eAyDDiB,EAzDCM,EAAAhB,KA8DP/G,EAAKgH,SAAS,CAAChF,QAASyF,EAAM,UAC9BzH,EAAKgH,SAAS,CAACxF,QAASiG,EAAM,UAC9BzH,EAAKgH,SAAS,CAACzD,QAASkE,EAAM,UAC9BzH,EAAKgH,SAAS,CAAC5D,SAAUqE,EAAM,WAjExBM,EAAAiB,GAAAhJ,EAAA+H,EAAAlB,KAAA,GAkE+BjE,EAAUoF,QAAQG,QAAQnI,EAAKO,MAAMyC,UAAU1C,OAlE9E,eAAAyH,EAAAkB,GAAAlB,EAAAhB,KAAAgB,EAAAmB,GAAA,CAkEQ/F,gBAlER4E,EAAAkB,IAAAlB,EAAAiB,GAkEFhC,SAlEE1G,KAAAyH,EAAAiB,GAAAjB,EAAAmB,IAAAnB,EAAAoB,GAAAnJ,EAAA+H,EAAAlB,KAAA,GAmEwBjE,EAAUoF,QAAQO,QAAQvI,EAAKO,MAAMyC,UAAU1C,OAnEvE,QAwEP,IAxEOyH,EAAAqB,IAAArB,EAAAhB,KAAAgB,EAAAsB,IAAA,CAmEQnG,SAnER6E,EAAAqB,KAAArB,EAAAoB,GAmEFnC,SAnEE1G,KAAAyH,EAAAoB,GAAApB,EAAAsB,KAwEEzB,EAAI,EAAGA,EAAI5H,EAAKO,MAAMgD,QAAQmF,OAAQd,IACzC5H,EAAKO,MAAMgD,QAAQqE,KAAOpB,EAAS,KACrCxG,EAAKgH,SAAS,CAACxD,WAAW,IAC1BxD,EAAKgH,SAAS,CAAC3C,eAAgB,aA3E5B,OA8E2B,IAA9BrE,EAAKO,MAAMgD,QAAQmF,QACrB1I,EAAKgH,SAAS,CAAC3C,eAAgB,YAC/BrE,EAAKgH,SAAS,CAACxD,WAAW,MAEM,IAAzBxD,EAAKO,MAAMiD,WAClBxD,EAAKgH,SAAS,CAAC2B,eAAgB,8CAnF1BZ,EAAAlB,KAAA,GAuFiBjE,EAAUoF,QAAQY,UAAU5I,EAAKO,MAAMyC,UAAU1C,OAvFlE,QAmGP,KAXkB,IAxFXyH,EAAAhB,OAyFL/G,EAAKgH,SAAS,CAAC2B,eAAgB,0BAC/B3I,EAAKgH,SAAS,CAAC3C,eAAgB,UAIjCrE,EAAKgH,SAAS,CAAC1D,aAActD,EAAKO,MAAM8C,UAAUiG,MAAM,EAAEtJ,EAAKO,MAAM8C,UAAUqF,OAAO,KACtF1I,EAAKgH,SAAS,CAAChD,WAAY7C,EAAAC,EAAAC,cAACkI,EAAD,CAAY9I,OAAQT,EAAKO,MAAMiB,QAASQ,QAAShC,EAAKO,MAAMyB,QAASC,UAAWjC,EAAKO,MAAM+C,aAAcyF,QAAM,MAGpIlB,EAAU,GACPC,EAAG,EAAGA,EAAI9H,EAAKO,MAAMiB,QAAQkH,OAAQZ,IAC5CD,EAAQ2B,KAAKrI,EAAAC,EAAAC,cAAA,UAAKrB,EAAKO,MAAMiB,QAAQsG,GAAxB,KAA8B9H,EAAKO,MAAMyB,QAAQ8F,KAEhE9H,EAAKgH,SAAS,CAAC9C,cAAe2D,IAGG,IAA9B7H,EAAKO,MAAMiB,QAAQkH,QACpB1I,EAAKgH,SAAS,CAAC1C,GAAI,YACnBtE,EAAKgH,SAAS,CAACzC,GAAI,YACnBvE,EAAKgH,SAAS,CAACxC,GAAI,YACnBxE,EAAKgH,SAAS,CAACvC,GAAI,YACnBzE,EAAKgH,SAAS,CAACtC,GAAI,aACmB,IAA9B1E,EAAKO,MAAMiB,QAAQkH,QAC3B1I,EAAKgH,SAAS,CAAC1C,GAAI,YACnBtE,EAAKgH,SAAS,CAACzC,GAAI,YACnBvE,EAAKgH,SAAS,CAACxC,GAAI,YACnBxE,EAAKgH,SAAS,CAACvC,GAAI,aACmB,IAA9BzE,EAAKO,MAAMiB,QAAQkH,QAC3B1I,EAAKgH,SAAS,CAAC1C,GAAI,YACnBtE,EAAKgH,SAAS,CAACzC,GAAI,YACnBvE,EAAKgH,SAAS,CAACxC,GAAI,aACmB,IAA9BxE,EAAKO,MAAMiB,QAAQkH,SAC3B1I,EAAKgH,SAAS,CAAC1C,GAAI,YACnBtE,EAAKgH,SAAS,CAACzC,GAAI,aAGrBvE,EAAKgH,SAAS,CAAC/C,iBAAkB,YA7H1B,QAAA8D,EAAAlB,KAAA,iBAAAkB,EAAAnB,KAAA,GAAAmB,EAAA0B,IAAA1B,EAAA,SAiIT/G,QAAQC,IAAR8G,EAAA0B,KACAtC,MAAM,8JAlIG,yBAAAY,EAAAT,SAAAE,EAAA,0EAuIbkC,8CAAU,SAAAC,EAAOpD,GAAP,IAAAqD,EAAApD,EAAA,OAAAC,EAAArF,EAAAsF,KAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cACJ+C,GAAO,EADHC,EAAAjD,KAAA,EAAAiD,EAAAhD,KAAA,EAGiBnH,EAAKyC,IAAI2E,cAH1B,cAGAN,EAHAqD,EAAA9C,KAIN6C,GAAO,EACP5J,EAAKgH,SAAS,CAACvD,eAAgB,YALzBoG,EAAAhD,KAAA,EAOA3E,EAAM8F,QAAQ8B,KAAK9J,EAAKO,MAAMyC,UAAS,GAAM+G,KAAK,CACtD7B,KAAM1B,EAAS,KARX,OAUNxG,EAAKgH,SAAS,CAACvD,eAAgB,SAC/BzD,EAAKgH,SAAS,CAACtD,WAAY,YAXrBmG,EAAAhD,KAAA,iBAAAgD,EAAAjD,KAAA,GAAAiD,EAAA3C,GAAA2C,EAAA,UAcO,IAATD,GACF5I,QAAQC,IAAR4I,EAAA3C,IACAC,MAAM,mHAERnH,EAAKgH,SAAS,CAACvD,eAAgB,SAC/BzD,EAAKgH,SAAS,CAACtD,WAAY,aAnBrB,yBAAAmG,EAAAvC,SAAAqC,EAAA,0EAyBVK,6CAAS,SAAAC,EAAO1D,GAAP,IAAAqD,EAAApD,EAAA,OAAAC,EAAArF,EAAAsF,KAAA,SAAAwD,GAAA,cAAAA,EAAAtD,KAAAsD,EAAArD,MAAA,cACH+C,GAAO,EADJM,EAAAtD,KAAA,EAAAsD,EAAArD,KAAA,EAGkBnH,EAAKyC,IAAI2E,cAH3B,cAGCN,EAHD0D,EAAAnD,KAIL6C,GAAO,EACP5J,EAAKgH,SAAS,CAACvD,eAAgB,YAL1ByG,EAAArD,KAAA,EAMC3E,EAAM8F,QAAQ8B,KAAK9J,EAAKO,MAAMyC,UAAS,GAAO+G,KAAK,CACvD7B,KAAM1B,EAAS,KAPZ,OASLxG,EAAKgH,SAAS,CAACvD,eAAgB,SAC/BzD,EAAKgH,SAAS,CAACtD,WAAY,YAVtBwG,EAAArD,KAAA,iBAAAqD,EAAAtD,KAAA,GAAAsD,EAAAhD,GAAAgD,EAAA,UAaQ,IAATN,GACF5I,QAAQC,IAARiJ,EAAAhD,IACAC,MAAM,mHAERnH,EAAKgH,SAAS,CAACvD,eAAgB,SAC/BzD,EAAKgH,SAAS,CAACtD,WAAY,aAlBtB,yBAAAwG,EAAA5C,SAAA2C,EAAA,0EAwBTE,gDAAY,SAAAC,EAAO7D,GAAP,IAAAqD,EAAApD,EAAA,OAAAC,EAAArF,EAAAsF,KAAA,SAAA2D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,cACN+C,GAAO,EADDS,EAAAzD,KAAA,EAAAyD,EAAAxD,KAAA,EAGenH,EAAKyC,IAAI2E,cAHxB,cAGFN,EAHE6D,EAAAtD,KAKR6C,GAAO,EACP5J,EAAKgH,SAAS,CAACvD,eAAgB,YANvB4G,EAAAxD,KAAA,EAQFjE,EAAUoF,QAAQ8B,KAAK9J,EAAKO,MAAMyC,SAAShD,EAAKO,MAAM6D,WAAW,GAAG2F,KAAK,CAC7E7B,KAAM1B,EAAS,KATT,OAWRxG,EAAKgH,SAAS,CAACvD,eAAgB,SAC/BzD,EAAKgH,SAAS,CAACtD,WAAY,YAZnB2G,EAAAxD,KAAA,iBAAAwD,EAAAzD,KAAA,GAAAyD,EAAAnD,GAAAmD,EAAA,UAeK,IAATT,GACF5I,QAAQC,IAARoJ,EAAAnD,IACAC,MAAM,mHAERnH,EAAKgH,SAAS,CAACvD,eAAgB,SAC/BzD,EAAKgH,SAAS,CAACtD,WAAY,aApBnB,yBAAA2G,EAAA/C,SAAA8C,EAAA,0EA0BZE,+CAAW,SAAAC,EAAOhE,GAAP,IAAAiE,EAAAhE,EAAAiE,EAAAC,EAAAC,EAAA7C,EAAA8C,EAAAC,EAAAC,EAAAC,EAAAC,EAAApD,EAAAqD,EAAA,OAAAxE,EAAArF,EAAAsF,KAAA,SAAAwE,GAAA,cAAAA,EAAAtE,KAAAsE,EAAArE,MAAA,UAAAqE,EAAAtE,KAAA,EAEH4D,EAAU,IACV1B,SAAS9I,EAAKO,MAAMuE,MAAQ,GAHzB,CAAAoG,EAAArE,KAAA,QAImB,MAApB7G,EAAKO,MAAMuE,MACb9E,EAAKgH,SAAS,CAACvB,gBAAiB,SAChCzF,EAAKgH,SAAS,CAACxB,gBAAiB,aAEL,IAApBxF,EAAKO,MAAMuE,MAClB9E,EAAKgH,SAAS,CAACxB,gBAAiB,SAChCxF,EAAKgH,SAAS,CAACtB,iBAAkB,aAEN,IAApB1F,EAAKO,MAAMuE,MAClB9E,EAAKgH,SAAS,CAACtB,iBAAkB,SACjC1F,EAAKgH,SAAS,CAACrB,kBAAmB,aACN,IAAxB3F,EAAKO,MAAM6C,UAA6C,UAAxBpD,EAAKO,MAAM0C,WAC7CuH,GAAS,IAGoB,cAAxBxK,EAAKO,MAAM0C,WAAqD,IAAzBjD,EAAKO,MAAM6E,WACzDpF,EAAKgH,SAAS,CAACrB,kBAAmB,SAClC3F,EAAKgH,SAAS,CAACpB,eAAgB,YAC/B5F,EAAKgH,SAAS,CAAC5B,WAAW,KACC,IAAxBpF,EAAKO,MAAM6C,WACZoH,GAAS,KAGoB,IAAxBxK,EAAKO,MAAM6C,WAClBpD,EAAKgH,SAAS,CAACpB,eAAgB,SAC/B5F,EAAKgH,SAAS,CAACrB,kBAAmB,SAClC3F,EAAKgH,SAAS,CAACnB,eAAgB,YAC/B2E,GAAS,GA/BNU,EAAArE,KAAA,qBAkC0B,IAAxB7G,EAAKO,MAAM6C,UAA6C,cAAxBpD,EAAKO,MAAM0C,SAlC7C,CAAAiI,EAAArE,KAAA,cAmCD7G,EAAKO,MAAM8E,QAAU,GAnCpB,CAAA6F,EAAArE,KAAA,gBAoCH7G,EAAKgH,SAAS,CAACzB,cAAe,YApC3B2F,EAAArE,KAAA,GAqCoBnH,EAAKyC,IAAI2E,cArC7B,eAqCGN,EArCH0E,EAAAnE,KAAAmE,EAAArE,KAAA,GAsCuBjE,EAAUoF,QAAQmD,aAAanL,EAAKO,MAAM2C,SAASsD,EAAS,IAAIlG,OAtCvF,eAsCGmK,EAtCHS,EAAAnE,KAAAmE,EAAArE,KAAA,GAwCG7G,EAAKgH,SAAS,CAAChE,SAAUyH,IAxC5B,eAAAS,EAAArE,KAAA,GA0CGjE,EAAUoF,QAAQoD,WAAWpL,EAAKO,MAAM4C,gBAAgBnD,EAAKO,MAAM2C,SACvE,CAAClD,EAAKO,MAAMwE,QAAQ/E,EAAKO,MAAMyE,QAAQhF,EAAKO,MAAM0E,QAAQjF,EAAKO,MAAM2E,QAAQlF,EAAKO,MAAM4E,SACxF,IAAG,EAA2B,KAAtBnF,EAAKO,MAAMoD,YAAiBoG,KAAK,CACzC7B,KAAM1B,EAAS,KA7Cd,QAAA0E,EAAArE,KAAA,iBAkDH7G,EAAKgH,SAAS,CAAC3B,QAAS,IACxBrF,EAAKgH,SAAS,CAAClB,kBAAmB,YAClC9F,EAAKgH,SAAS,CAACpB,eAAgB,SAC/B5F,EAAKgH,SAAS,CAACrB,kBAAmB,SAClC3F,EAAKgH,SAAS,CAAC1B,WAAY,qBAtDxB,QAAA4F,EAAArE,KAAA,sBAyD0B,IAAxB7G,EAAKO,MAAM6C,UAA8C,cAAxBpD,EAAKO,MAAM0C,SAzD9C,CAAAiI,EAAArE,KAAA,cA0DD7G,EAAKO,MAAM8E,QAAU,GA1DpB,CAAA6F,EAAArE,KAAA,gBA2DH7G,EAAKgH,SAAS,CAACzB,cAAe,YA3D3B2F,EAAArE,KAAA,GA4DoBnH,EAAKyC,IAAI2E,cA5D7B,QAgEH,IAJMN,EA5DH0E,EAAAnE,KA8DC4D,EAAS,GAEJ7C,EAAI,EAAGA,EAAI9H,EAAKO,MAAMgD,QAAQmF,OAAQZ,IAC7C6C,EAAOnB,KAAKxJ,EAAKO,MAAMgD,QAAQuE,GAAGuD,QAAQ,aAAc,KAjEvD,OAAAH,EAAArE,KAAA,GAoEG7G,EAAKgH,SAAS,CAACzD,QAASoH,IApE3B,eAAAO,EAAArE,KAAA,GAsEuBjE,EAAUoF,QAAQmD,aAAanL,EAAKO,MAAM2C,SAASsD,EAAS,IAAIlG,OAtEvF,eAsEGmK,EAtEHS,EAAAnE,KAAAmE,EAAArE,KAAA,GAwEG7G,EAAKgH,SAAS,CAAChE,SAAUyH,IAxE5B,eAAAS,EAAArE,KAAA,GA0EGjE,EAAUoF,QAAQoD,WAAWpL,EAAKO,MAAM4C,gBAAgBnD,EAAKO,MAAM2C,SACvE,CAAClD,EAAKO,MAAMwE,QAAQ/E,EAAKO,MAAMyE,QAAQhF,EAAKO,MAAM0E,QAAQjF,EAAKO,MAAM2E,QAAQlF,EAAKO,MAAM4E,SACvFnF,EAAKO,MAAMgD,SAAQ,EAA4B,KAAtBvD,EAAKO,MAAMoD,YAAiBoG,KAAK,CAC3D7B,KAAM1B,EAAS,KA7Ed,QAAA0E,EAAArE,KAAA,iBAiFH7G,EAAKgH,SAAS,CAAC3B,QAAS,IACxBrF,EAAKgH,SAAS,CAAClB,kBAAmB,YAClC9F,EAAKgH,SAAS,CAACpB,eAAgB,SAC/B5F,EAAKgH,SAAS,CAACrB,kBAAmB,SAClC3F,EAAKgH,SAAS,CAACnB,eAAgB,SAC/B7F,EAAKgH,SAAS,CAAC1B,WAAY,qBAtFxB,QAAA4F,EAAArE,KAAA,sBAyF0B,IAAxB7G,EAAKO,MAAM6C,UAA6C,UAAxBpD,EAAKO,MAAM0C,SAzF7C,CAAAiI,EAAArE,KAAA,cA0FD7G,EAAKO,MAAM8E,QAAU,GA1FpB,CAAA6F,EAAArE,KAAA,gBA2FH7G,EAAKgH,SAAS,CAACzB,cAAe,YA3F3B2F,EAAArE,KAAA,GA4FoBnH,EAAKyC,IAAI2E,cA5F7B,eA4FGN,EA5FH0E,EAAAnE,KAAAmE,EAAArE,KAAA,GA8FuB3E,EAAM8F,QAAQmD,aAAanL,EAAKO,MAAM2C,SAASsD,EAAS,IAAIlG,OA9FnF,eA8FGmK,EA9FHS,EAAAnE,KAAAmE,EAAArE,KAAA,GAgGG7G,EAAKgH,SAAS,CAAChE,SAAUyH,IAhG5B,eAAAS,EAAArE,KAAA,GAkGG3E,EAAM8F,QAAQoD,WAAWpL,EAAKO,MAAM4C,gBAAgBnD,EAAKO,MAAM2C,UAAS,EAAK,GAAyB,KAAtBlD,EAAKO,MAAMoD,YAAiBoG,KAAK,CACrH7B,KAAM1B,EAAS,KAnGd,QAAA0E,EAAArE,KAAA,iBAwGH7G,EAAKgH,SAAS,CAAC3B,QAAS,IACxBrF,EAAKgH,SAAS,CAAClB,kBAAmB,YAClC9F,EAAKgH,SAAS,CAACpB,eAAgB,SAC/B5F,EAAKgH,SAAS,CAACrB,kBAAmB,SAClC3F,EAAKgH,SAAS,CAAC1B,WAAY,qBA5GxB,QAAA4F,EAAArE,KAAA,sBA+G0B,IAAxB7G,EAAKO,MAAM6C,UAA8C,UAAxBpD,EAAKO,MAAM0C,SA/G9C,CAAAiI,EAAArE,KAAA,eAgHD7G,EAAKO,MAAM8E,QAAU,GAhHpB,CAAA6F,EAAArE,KAAA,gBAiHH7G,EAAKgH,SAAS,CAACzB,cAAe,YAjH3B2F,EAAArE,KAAA,GAkHoBnH,EAAKyC,IAAI2E,cAlH7B,QAqHH,IAHMN,EAlHH0E,EAAAnE,KAmHC4D,EAAS,GAEJ/C,EAAI,EAAGA,EAAI5H,EAAKO,MAAMgD,QAAQmF,OAAQd,IAC7C+C,EAAOnB,KAAKxJ,EAAKO,MAAMgD,QAAQqE,GAAGyD,QAAQ,aAAc,KAtHvD,OAAAH,EAAArE,KAAA,GAwHuB3E,EAAM8F,QAAQmD,aAAanL,EAAKO,MAAM2C,SAASsD,EAAS,IAAIlG,OAxHnF,eAwHGmK,EAxHHS,EAAAnE,KAAAmE,EAAArE,KAAA,GA0HG7G,EAAKgH,SAAS,CAAChE,SAAUyH,IA1H5B,eAAAS,EAAArE,KAAA,GA4HG7G,EAAKgH,SAAS,CAACzD,QAASoH,IA5H3B,eAAAO,EAAArE,KAAA,GA8HG3E,EAAM8F,QAAQoD,WAAWpL,EAAKO,MAAM4C,gBAAgBnD,EAAKO,MAAM2C,UAAS,EAAMlD,EAAKO,MAAMgD,QAA8B,KAAtBvD,EAAKO,MAAMoD,YAAiBoG,KAAK,CACtI7B,KAAM1B,EAAS,KA/Hd,QAAA0E,EAAArE,KAAA,kBAmIH7G,EAAKgH,SAAS,CAAC3B,QAAS,IACxBrF,EAAKgH,SAAS,CAAClB,kBAAmB,YAClC9F,EAAKgH,SAAS,CAACpB,eAAgB,SAC/B5F,EAAKgH,SAAS,CAACrB,kBAAmB,SAClC3F,EAAKgH,SAAS,CAACnB,eAAgB,SAC/B7F,EAAKgH,SAAS,CAAC1B,WAAY,qBAxIxB,SA2IPkF,GAAS1B,SAAS9I,EAAKO,MAAMuE,MAC7B9E,EAAKgH,SAAS,CAAClC,KAAM0F,IA5IdU,EAAArE,KAAA,mBAAAqE,EAAAtE,KAAA,IAAAsE,EAAAhE,GAAAgE,EAAA,SA+IPlL,EAAKgH,SAAS,CAACzB,cAAe,SA/IvB,0BAAA2F,EAAA5D,SAAAiD,EAAA,2EA4JXe,+CAAW,SAAAC,EAAOhF,GAAP,IAAAiF,EAAAC,EAAAjF,EAAAkF,EAAAC,EAAAC,EAAA9D,EAAA,OAAArB,EAAArF,EAAAsF,KAAA,SAAAmF,GAAA,cAAAA,EAAAjF,KAAAiF,EAAAhF,MAAA,cACL2E,EAAW,GACXC,EAAU,EAFLI,EAAAhF,KAAA,EAGcnH,EAAKyC,IAAI2E,cAHvB,OAGHN,EAHGqF,EAAA9E,KAAA,YAMH0E,EAAU,KANP,CAAAI,EAAAhF,KAAA,gBAAAgF,EAAAjF,KAAA,EAAAiF,EAAA3E,GAQLsE,EARKK,EAAAhF,KAAA,GAQe3E,EAAM8F,QAAQ8D,YAAY9L,EAAKO,MAAMuC,KAAM2I,GAASnL,OARnE,QAAAuL,EAAAzD,GAAAyD,EAAA9E,KAAA8E,EAAA3E,GAQIsC,KARJlJ,KAAAuL,EAAA3E,GAAA2E,EAAAzD,IASLqD,IATKI,EAAAhF,KAAA,wBAAAgF,EAAAjF,KAAA,GAAAiF,EAAAxD,GAAAwD,EAAA,SAAAA,EAAAE,OAAA,oBAAAF,EAAAhF,KAAA,uBAAAgF,EAAAhF,KAAA,GAeH7G,EAAKgH,SAAS,CAACjB,kBAAmByF,IAf/B,QAkBLE,EAAgB,GAChBC,EAAW,CAACxK,EAAAC,EAAAC,cAAA,MAAI2K,IAAI,mBAAR,iBAnBPJ,EAAAnF,EAAArF,EAAA6K,KAAA,SAAAL,IAAA,IAAAnE,EAAAyE,EAAAC,EAAA5J,EAAA6J,EAAAC,EAAAC,EAAA,OAAA7F,EAAArF,EAAAsF,KAAA,SAAA6F,GAAA,cAAAA,EAAA3F,KAAA2F,EAAA1F,MAAA,cAAA0F,EAAA1F,KAAA,EAsBc3E,EAAM8F,QAAQC,WAAWjI,EAAKO,MAAMwF,kBAAkB+B,IAAIxH,KAAK,CAClF4H,KAAM1B,EAAS,KAvBV,cAsBDiB,EAtBC8E,EAAAxF,KA0BDmF,EAAKzE,EAAM,GACX0E,EAAM1E,EAAM,IA3BX8E,EAAA1F,KAAA,EA4BY3E,EAAM8F,QAAQO,QAAQvI,EAAKO,MAAMwF,kBAAkB+B,IAAIxH,OA5BnE,cA4BDiC,EA5BCgK,EAAAxF,KAAAwF,EAAA1F,KAAA,GA6BY3E,EAAM8F,QAAQG,QAAQnI,EAAKO,MAAMwF,kBAAkB+B,IAAIxH,OA7BnE,QA6BD8L,EA7BCG,EAAAxF,KA8BDsF,EAAU,QAAQvE,EAAE0E,WAEtBF,EACJnL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASmL,MAAO,CAACC,UAAU,WAAWvL,EAAAC,EAAAC,cAAA,UAAKkB,GAC1DpB,EAAAC,EAAAC,cAAA,SAAI+K,GAASjL,EAAAC,EAAAC,cAAA,uBAAe8K,GAAQhL,EAAAC,EAAAC,cAAA,sBAAc6K,GAClD/K,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBqL,QAAS,SAAApG,GAAK,OAAGvG,EAAK4M,cAAcP,KAAvE,gBAGAlL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGwL,GAAKR,EAASI,MAAO,CAACK,SAAU,OAAOpL,QAAS,SAAU1B,EAAKO,MAAMwF,kBAAkB+B,KAE1F4D,EAAcqB,OAAOrB,EAAchD,OAAO,EAAE,EAAE4D,GAE3CxE,EAAE,EAAI,IAAOA,EAAE,GAAK,IAAM,GAC3B6D,EAASnC,KAAKkC,GACdC,EAASnC,KAAK,CAACrI,EAAAC,EAAAC,cAAA,aACfsK,EAASnC,KAAK,CAACrI,EAAAC,EAAAC,cAAA,QAAM2K,IAAK,iBAAiBlE,EAAE0E,WAAYC,MAAO,CAACO,WAAY,MAAOC,YAAa,QAAQ9L,EAAAC,EAAAC,cAAA,cACzGqK,EAAgB,IACP5D,EAAE,IAAM9H,EAAKO,MAAMwF,kBAAkB2C,SAC9CiD,EAASnC,KAAKkC,GACdC,EAASnC,KAAK,CAACrI,EAAAC,EAAAC,cAAA,aACfqK,EAAgB,IAnDX,yBAAAa,EAAAjF,SAAAsE,KAoBA9D,EAAI,EApBJ,aAoBOA,EAAI9H,EAAKO,MAAMwF,kBAAkB2C,QApBxC,CAAAmD,EAAAhF,KAAA,gBAAAgF,EAAAqB,cAAAtB,IAAA,iBAoB+C9D,IApB/C+D,EAAAhF,KAAA,iBAuDN8E,EAASjD,OAAS,GACnB1I,EAAKgH,SAAS,CAACf,UAAW0F,IAxDnB,yBAAAE,EAAAvE,SAAAiE,EAAA,0EA6DX4B,+CAAW,SAAAC,EAAO7G,GAAP,IAAAkF,EAAAD,EAAAhF,EAAAkF,EAAAC,EAAA0B,EAAAzF,EAAAF,EAAA,OAAAjB,EAAArF,EAAAsF,KAAA,SAAA4G,GAAA,cAAAA,EAAA1G,KAAA0G,EAAAzG,MAAA,cACL4E,EAAU,EACVD,EAAW,GAFN8B,EAAAzG,KAAA,EAGcnH,EAAKyC,IAAI2E,cAHvB,OAGHN,EAHG8G,EAAAvG,KAAA,YAMH0E,EAAU,KANP,CAAA6B,EAAAzG,KAAA,gBAAAyG,EAAA1G,KAAA,EAAA0G,EAAApG,GAQLsE,EARK8B,EAAAzG,KAAA,GAQejE,EAAUoF,QAAQ8D,YAAY9L,EAAKO,MAAMuC,KAAK2I,GAASnL,OARtE,QAAAgN,EAAAlF,GAAAkF,EAAAvG,KAAAuG,EAAApG,GAQIsC,KARJlJ,KAAAgN,EAAApG,GAAAoG,EAAAlF,IASLqD,IATK6B,EAAAzG,KAAA,wBAAAyG,EAAA1G,KAAA,GAAA0G,EAAAjF,GAAAiF,EAAA,SAAAA,EAAAvB,OAAA,oBAAAuB,EAAAzG,KAAA,uBAAAyG,EAAAzG,KAAA,GAeH7G,EAAKgH,SAAS,CAAChB,kBAAmBwF,IAf/B,QAkBLE,EAAgB,GAChBC,EAAW,CAACxK,EAAAC,EAAAC,cAAA,MAAI2K,IAAI,iBAAR,qBAnBPqB,EAAA5G,EAAArF,EAAA6K,KAAA,SAAAoB,IAAA,IAAA5F,EAAA8F,EAAAC,EAAAjL,EAAA6J,EAAAqB,EAAAZ,EAAAP,EAAA,OAAA7F,EAAArF,EAAAsF,KAAA,SAAAgH,GAAA,cAAAA,EAAA9G,KAAA8G,EAAA7G,MAAA,cAAA6G,EAAA7G,KAAA,EAsBcjE,EAAUoF,QAAQC,WAAWjI,EAAKO,MAAMyF,kBAAkB4B,IAAItH,KAAK,CACtF4H,KAAM1B,EAAS,KAvBV,cAsBDiB,EAtBCiG,EAAA3G,KA0BDwG,EAAc9F,EAAM,QACpB+F,EAAc/F,EAAM,QA3BnBiG,EAAA7G,KAAA,EA4BYjE,EAAUoF,QAAQO,QAAQvI,EAAKO,MAAMyF,kBAAkB4B,IAAItH,OA5BvE,cA4BDiC,EA5BCmL,EAAA3G,KAAA2G,EAAA7G,KAAA,GA6BYjE,EAAUoF,QAAQG,QAAQnI,EAAKO,MAAMyF,kBAAkB4B,IAAItH,OA7BvE,QAgCP,IAHM8L,EA7BCsB,EAAA3G,KA+BH0G,EAAa,GACR/F,EAAG,EAAGA,EAAI8F,EAAY9E,OAAQhB,IACd,KAAnB8F,EAAY9F,IACd+F,EAAWjE,KAAKrI,EAAAC,EAAAC,cAAA,KAAG2K,IAAK,YAAYpE,EAAE4E,WAAW9E,EAAE8E,YAAagB,EAAY9F,GAAG,KAAK6F,EAAY7F,KAG9FmF,EAAK,QAAQjF,EAAE4E,WACjBF,EACJnL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASmL,MAAO,CAACC,UAAW,WAC3CvL,EAAAC,EAAAC,cAAA,UAAKkB,GACLpB,EAAAC,EAAAC,cAAA,SAAI+K,GACHqB,EACDtM,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBqL,QAAS,SAAApG,GAAK,OAAGvG,EAAK4M,cAAcC,KAAvE,gBAGA1L,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGwL,GAAKA,EAAIJ,MAAO,CAACK,SAAU,OAAOpL,QAAS,SAAU1B,EAAKO,MAAMyF,kBAAkB4B,KAGrF8D,EAAcqB,OAAOrB,EAAchD,OAAO,EAAE,EAAE4D,GAE3C1E,EAAE,EAAI,IAAOA,EAAE,GAAK,IAAM,GAC3B+D,EAASnC,KAAKkC,GACdC,EAASnC,KAAK,CAACrI,EAAAC,EAAAC,cAAA,aACfsK,EAASnC,KAAK,CAACrI,EAAAC,EAAAC,cAAA,QAAM2K,IAAM,YAAYpE,EAAE4E,WAAYC,MAAO,CAACO,WAAY,MAAOC,YAAa,QAAQ9L,EAAAC,EAAAC,cAAA,cACrGqK,EAAgB,IACP9D,EAAE,IAAM5H,EAAKO,MAAMyF,kBAAkB0C,SAC9CiD,EAASnC,KAAKkC,GACdC,EAASnC,KAAK,CAACrI,EAAAC,EAAAC,cAAA,aACfqK,EAAgB,IA5DX,yBAAAgC,EAAApG,SAAA+F,KAoBAzF,EAAI,EApBJ,aAoBOA,EAAI5H,EAAKO,MAAMyF,kBAAkB0C,QApBxC,CAAA4E,EAAAzG,KAAA,gBAAAyG,EAAAJ,cAAAG,IAAA,iBAoB+CzF,IApB/C0F,EAAAzG,KAAA,iBAgEN8E,EAASjD,OAAS,GACnB1I,EAAKgH,SAAS,CAACd,UAAWyF,IAjEnB,yBAAA2B,EAAAhG,SAAA8F,EAAA,0EAoEXO,uDAAmB,SAAAC,EAAOrH,GAAP,OAAAE,EAAArF,EAAAsF,KAAA,SAAAmH,GAAA,cAAAA,EAAAjH,KAAAiH,EAAAhH,MAAA,cAAAgH,EAAAhH,KAAA,EACX7G,EAAKgH,SAAS,CAACpC,cAAe,OAAQC,UAAW,UAAWF,cAAe,SADhE,cAAAkJ,EAAAhH,KAAA,EAEX7G,EAAKgH,SAAS,CAACZ,iBAAkB,YAFtB,cAAAyH,EAAAhH,KAAA,EAGX7G,EAAKmN,WAHM,cAAAU,EAAAhH,KAAA,EAIX7G,EAAKsL,WAJM,cAAAuC,EAAAhH,KAAA,GAKX7G,EAAKgH,SAAS,CAACZ,iBAAkB,SALtB,yBAAAyH,EAAAvG,SAAAsG,yIA1ILE,GACqC,SAA9CC,SAASC,eAAeF,GAAIrB,MAAM/K,SACnCqM,SAASC,eAAeF,GAAIrB,MAAM/K,QAAU,SAC5CV,QAAQC,IAAI,YAGZ8M,SAASC,eAAeF,GAAIrB,MAAM/K,QAAU,mDA8I9CvB,KAAKkG,2CAGE,IAAA4H,EAAA9N,KACP,OACEgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,UACfH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGgG,KAAK,uBAAuB/F,UAAW,SAA1C,aACJH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAGFF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAY,QAAOH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAUH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAenB,KAAKI,MAAMwC,aAApE,IAAyF5C,KAAKI,MAAMuC,OAC1H3B,EAAAC,EAAAC,cAAA,QAAMC,UAAY,YAChBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASqL,QAAS,SAAApG,GAAK,OAAG3G,OAAOsO,SAASC,WAA5D,qBADF,IACmGhN,EAAAC,EAAAC,cAAA,QAAMC,UAAY,SAAlB,OACjGH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASqL,QAAU,SAAApG,GAAK,OAAG0H,EAAKjH,SAAS,CAACpC,cAAe,UAAWC,UAAW,OAAQF,cAAe,WAAxH,iBAFF,IAE2JxD,EAAAC,EAAAC,cAAA,QAAMC,UAAY,SAAlB,OACzJH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASqL,QAAU,SAAApG,GAAK,OAAG0H,EAAKN,qBAAlD,mBAIJxM,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAGAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAamL,MAAO,CAAC/K,QAASvB,KAAKI,MAAMoE,gBACxDxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,uFACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOmB,KAAK,OAAO4L,YAAY,wBAAwBpL,SAAY7C,KAAKI,MAAM8N,MAAOC,SAAU,SAAA/H,GAAK,OAAG0H,EAAKjH,SAAS,CAAChE,SAAUuD,EAAMgI,OAAOF,WAC7IlN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAGFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAjB,cACIH,EAAAC,EAAAC,cAAA,SAAOkB,KAAM,QAAQC,KAAK,QAAQmK,QAAS,SAAApG,GAAK,OAAG0H,EAAKjH,SAAS,CAAC/D,SAAU,aAC5E9B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAGlBH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAjB,kBACEH,EAAAC,EAAAC,cAAA,SAAOkB,KAAM,QAAQC,KAAK,QAAQmK,QAAS,SAAApG,GAAK,OAAG0H,EAAKjH,SAAS,CAAC/D,SAAU,iBAC5E9B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAIpBH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aACdH,EAAAC,EAAAC,cAAA,UAAQsL,QAASxM,KAAKoH,WAAYjG,UAAU,UAA5C,WAGFH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAY,OAAOuL,GAAG,QAAQJ,MAAO,CAAC/K,QAASvB,KAAKI,MAAMwD,eAC7D5C,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAKlB,KAAKI,MAAM2C,UAChB/B,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UAAKlB,KAAKI,MAAM4C,iBAChBhC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMoL,MAAO,CAACC,UAAW,SAAzB,aAA6CvM,KAAKI,MAAMsD,SAA5D,mBACA1C,EAAAC,EAAAC,cAAA,QAAMoL,MAAO,CAACC,UAAW,UAAzB,cAA+CvM,KAAKI,MAAMqD,WAC1DzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACdnB,KAAKI,MAAMuD,MACZ3C,EAAAC,EAAAC,cAAA,SAAIlB,KAAKI,MAAMoI,gBACfxH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAAQoL,MAAO,CAAC/K,QAASvB,KAAKI,MAAM8D,gBAAiBsI,QAASxM,KAAK6J,OAAO6C,GAAG,SAA7E,WAAN,+BAAqJ1L,EAAAC,EAAAC,cAAA,UAAQoL,MAAO,CAAC/K,QAASvB,KAAKI,MAAM8D,gBAAiBsI,QAASxM,KAAKuJ,QAASmD,GAAG,UAA/E,cAErJ1L,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBmL,MAAO,CAAC/K,QAASvB,KAAKI,MAAMkD,eAAgBiJ,UAAW,WACxFvL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACTH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,qCACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOuL,GAAI,cAC1B1L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAGrBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,UACjBH,EAAAC,EAAAC,cAAA,MAAIoL,MAAO,CAAC/K,QAASvB,KAAKI,MAAMmD,WAAYgJ,UAAW,SAAU8B,MAAO,YAAxE,uGAEArN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAIFF,EAAAC,EAAAC,cAAA,OAAKC,UAAY,OAAOuL,GAAG,YAAYJ,MAAO,CAAC/K,QAASvB,KAAKI,MAAM0D,mBACjE9C,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAKlB,KAAKI,MAAM2C,UAChB/B,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UAAKlB,KAAKI,MAAM4C,iBACfhD,KAAKI,MAAM2D,cACZ/C,EAAAC,EAAAC,cAAA,OAAKC,UAAY,cACdnB,KAAKI,MAAMyD,YAEd7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SAAOoL,MAAO,CAAC/K,QAAQvB,KAAKI,MAAM+D,IAAKhD,UAAU,aAAjD,IAA+DnB,KAAKI,MAAMiB,QAAQ,GAChFL,EAAAC,EAAAC,cAAA,SAAOkB,KAAM,QAAQC,KAAK,QAAQmK,QAAS,SAAApG,GAAK,OAAG0H,EAAKjH,SAAS,CAAC5C,WAAY,OAC9EjD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAGpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SAAOoL,MAAO,CAAC/K,QAAQvB,KAAKI,MAAMgE,IAAKjD,UAAU,aAAanB,KAAKI,MAAMiB,QAAQ,GAC7EL,EAAAC,EAAAC,cAAA,SAAOkB,KAAM,QAAQC,KAAK,QAAQmK,QAAS,SAAApG,GAAK,OAAG0H,EAAKjH,SAAS,CAAC5C,WAAY,OAC9EjD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAGtBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SAAOoL,MAAO,CAAC/K,QAAQvB,KAAKI,MAAMiE,IAAKlD,UAAU,aAAanB,KAAKI,MAAMiB,QAAQ,GAC7EL,EAAAC,EAAAC,cAAA,SAAOkB,KAAM,QAAQC,KAAK,QAAQmK,QAAS,SAAApG,GAAK,OAAG0H,EAAKjH,SAAS,CAAC5C,WAAY,OAC9EjD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAGtBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SAAOoL,MAAO,CAAC/K,QAAQvB,KAAKI,MAAMkE,IAAKnD,UAAU,aAAanB,KAAKI,MAAMiB,QAAQ,GAC7EL,EAAAC,EAAAC,cAAA,SAAOkB,KAAM,QAAQC,KAAK,QAAQmK,QAAS,SAAApG,GAAK,OAAG0H,EAAKjH,SAAS,CAAC5C,WAAY,OAC9EjD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAGtBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SAAOoL,MAAO,CAAC/K,QAAQvB,KAAKI,MAAMmE,IAAKpD,UAAU,aAAanB,KAAKI,MAAMiB,QAAQ,GAC7EL,EAAAC,EAAAC,cAAA,SAAOkB,KAAM,QAAQC,KAAK,QAAQmK,QAAS,SAAApG,GAAK,OAAG0H,EAAKjH,SAAS,CAAC5C,WAAY,OAC9EjD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAGxBH,EAAAC,EAAAC,cAAA,SAAIlB,KAAKI,MAAMoI,gBACbxH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YACdH,EAAAC,EAAAC,cAAA,UAAQoL,MAAO,CAAC/K,QAASvB,KAAKI,MAAM8D,gBAAiBsI,QAAWxM,KAAKgK,UAAW0C,GAAG,aAAnF,SAEF1L,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBmL,MAAO,CAAC/K,QAASvB,KAAKI,MAAMkD,eAAgBiJ,UAAW,WACxFvL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACTH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,qCACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOuL,GAAI,cAC1B1L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAGrBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,MAAIoL,MAAO,CAAC/K,QAASvB,KAAKI,MAAMmD,WAAYgJ,UAAW,SAAU8B,MAAO,YAAxE,wGAGFrN,EAAAC,EAAAC,cAAA,YAIAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAamL,MAAO,CAAC/K,QAASvB,KAAKI,MAAMqE,gBACtDzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIoL,MAAO,CAACO,WAAY,QAAxB,QAAsC7M,KAAKI,MAAMuE,MAEnD3D,EAAAC,EAAAC,cAAA,OAAKoL,MAAO,CAAC/K,QAASvB,KAAKI,MAAMkF,kBACjCtE,EAAAC,EAAAC,cAAA,MAAIoL,MAAO,CAACC,UAAW,WAAvB,oBACEvL,EAAAC,EAAAC,cAAA,KAAGoL,MAAO,CAACC,UAAW,WAAtB,sDACAvL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACnBH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAjB,cACIH,EAAAC,EAAAC,cAAA,SAAOkB,KAAM,QAAQC,KAAK,QAAQmK,QAAS,SAAApG,GAAK,OAAG0H,EAAKjH,SAAS,CAAC/D,SAAU,aAC5E9B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAGlBH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAjB,kBACEH,EAAAC,EAAAC,cAAA,SAAOkB,KAAM,QAAQC,KAAK,QAAQmK,QAAS,SAAApG,GAAK,OAAG0H,EAAKjH,SAAS,CAAC/D,SAAU,iBAC5E9B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAMpBH,EAAAC,EAAAC,cAAA,OAAKoL,MAAO,CAAC/K,QAASvB,KAAKI,MAAMiF,kBACjCrE,EAAAC,EAAAC,cAAA,MAAIoL,MAAO,CAACC,UAAW,WAAvB,oBACIvL,EAAAC,EAAAC,cAAA,KAAGoL,MAAO,CAACC,UAAW,WAAtB,sDACJvL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAjB,SACIH,EAAAC,EAAAC,cAAA,SAAOkB,KAAM,QAAQC,KAAK,QAAQmK,QAAS,SAAApG,GAAK,OAAG0H,EAAKjH,SAAS,CAAC5D,UAAU,OAC5EjC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAGlBH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAjB,8CACEH,EAAAC,EAAAC,cAAA,SAAQkB,KAAM,QAAQC,KAAK,QAAQmK,QAAS,SAAApG,GAAK,OAAG0H,EAAKjH,SAAS,CAAC5D,UAAU,OAC7EjC,EAAAC,EAAAC,cAAA,QAAOC,UAAU,iBAMrBH,EAAAC,EAAAC,cAAA,OAAKoL,MAAO,CAAC/K,QAASvB,KAAKI,MAAMmF,mBAC/BvE,EAAAC,EAAAC,cAAA,MAAIoL,MAAO,CAACC,UAAW,WAAvB,mCACAvL,EAAAC,EAAAC,cAAA,KAAGoL,MAAO,CAACC,UAAW,WAAtB,wDACAvL,EAAAC,EAAAC,cAAA,OAAKoL,MAAO,CAACC,UAAW,WACxBvL,EAAAC,EAAAC,cAAA,SAAOiN,SAAU,SAAA/H,GAAK,OAAG0H,EAAKjH,SAAS,CAAC9D,SAAUqD,EAAMgI,OAAOF,SAASD,YAAY,kBAAkBvB,GAAG,gBAAgBrK,KAAK,OAAOiM,UAAU,MAAMhC,MAAO,CAACiC,MAAO,MAAOF,MAAO,WAClLrN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAAUiN,SAAU,SAAA/H,GAAK,OAAG0H,EAAKjH,SAAS,CAAC7D,gBAAiBoD,EAAMgI,OAAOF,SAASxB,GAAG,cAAa4B,UAAU,MAAME,qBAAmB,GAAGlC,MAAO,CAAEmC,OAAQ,QAASF,MAAO,aAKzKvN,EAAAC,EAAAC,cAAA,OAAKoL,MAAO,CAAC/K,QAASvB,KAAKI,MAAMoF,oBACjCxE,EAAAC,EAAAC,cAAA,MAAIoL,MAAO,CAACC,UAAW,WAAvB,mCACAvL,EAAAC,EAAAC,cAAA,KAAGoL,MAAO,CAACC,UAAW,WAAtB,0IACAvL,EAAAC,EAAAC,cAAA,OAAKoL,MAAO,CAACC,UAAW,WACtBvL,EAAAC,EAAAC,cAAA,SAAOiN,SAAU,SAAA/H,GAAK,OAAG0H,EAAKjH,SAAS,CAACrD,WAAYmF,SAASvC,EAAMgI,OAAOF,UAAUD,YAAY,QAAQvB,GAAG,gBAAgBrK,KAAK,OAAOiM,UAAU,KAAKhC,MAAO,CAACiC,MAAO,KAAMF,MAAO,WAClLrN,EAAAC,EAAAC,cAAA,aAKFF,EAAAC,EAAAC,cAAA,OAAKoL,MAAO,CAAC/K,QAASvB,KAAKI,MAAMqF,iBACjCzE,EAAAC,EAAAC,cAAA,MAAIoL,MAAO,CAACC,UAAW,WAAvB,6BACAvL,EAAAC,EAAAC,cAAA,KAAGoL,MAAO,CAACC,UAAW,WAAtB,qDACAvL,EAAAC,EAAAC,cAAA,OAAKoL,MAAO,CAACC,UAAW,WACtBvL,EAAAC,EAAAC,cAAA,SAAOiN,SAAU,SAAA/H,GAAK,OAAG0H,EAAKjH,SAAS,CAACjC,QAASwB,EAAMgI,OAAOF,SAASD,YAAY,WAAWvB,GAAG,gBAAgBrK,KAAK,OAAQiK,MAAO,CAACiC,MAAO,KAAMF,MAAO,WAC1JrN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOiN,SAAU,SAAA/H,GAAK,OAAG0H,EAAKjH,SAAS,CAAChC,QAASuB,EAAMgI,OAAOF,SAASD,YAAY,WAAWvB,GAAG,gBAAgBrK,KAAK,OAAQiK,MAAO,CAACiC,MAAO,KAAMF,MAAO,WAC1JrN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOiN,SAAU,SAAA/H,GAAK,OAAG0H,EAAKjH,SAAS,CAAC/B,QAASsB,EAAMgI,OAAOF,SAASD,YAAY,WAAWvB,GAAG,gBAAgBrK,KAAK,OAAQiK,MAAO,CAACiC,MAAO,KAAMF,MAAO,WAC1JrN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOiN,SAAU,SAAA/H,GAAK,OAAG0H,EAAKjH,SAAS,CAAC9B,QAASqB,EAAMgI,OAAOF,SAASD,YAAY,WAAWvB,GAAG,gBAAgBrK,KAAK,OAAQiK,MAAO,CAACiC,MAAO,KAAMF,MAAO,WAC1JrN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOiN,SAAU,SAAA/H,GAAK,OAAG0H,EAAKjH,SAAS,CAAC7B,QAASoB,EAAMgI,OAAOF,SAASD,YAAY,WAAWvB,GAAG,gBAAgBrK,KAAK,OAAQiK,MAAO,CAACiC,MAAO,KAAMF,MAAO,WAC1JrN,EAAAC,EAAAC,cAAA,aAKFF,EAAAC,EAAAC,cAAA,OAAKoL,MAAO,CAAC/K,QAASvB,KAAKI,MAAMsF,iBACjC1E,EAAAC,EAAAC,cAAA,MAAIoL,MAAO,CAACC,UAAW,WAAvB,yCACAvL,EAAAC,EAAAC,cAAA,KAAGoL,MAAO,CAACC,UAAW,WAAtB,6IACAvL,EAAAC,EAAAC,cAAA,OAAKoL,MAAO,CAACC,UAAW,WACtBvL,EAAAC,EAAAC,cAAA,YAAUiN,SAAU,SAAA/H,GAAK,OAAG0H,EAAKjH,SAAS,CAACzD,QAASgD,EAAMgI,OAAOF,MAAMQ,MAAM,QAAQhC,GAAG,cAAc4B,UAAU,SAASE,qBAAmB,GAAGlC,MAAO,CAAEmC,OAAQ,QAASF,MAAO,WAChLvN,EAAAC,EAAAC,cAAA,aAKFF,EAAAC,EAAAC,cAAA,OAAKoL,MAAO,CAAC/K,QAASvB,KAAKI,MAAMuF,oBACjC3E,EAAAC,EAAAC,cAAA,MAAIoL,MAAO,CAACC,UAAW,WAAvB,wCACAvL,EAAAC,EAAAC,cAAA,KAAGoL,MAAO,CAACC,UAAW,WAAtB,yGACAvL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKoL,MAAO,CAAC/K,QAASvB,KAAKI,MAAMgF,cAAemH,UAAW,WAC3DvL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACTH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,4CACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOuL,GAAI,cAC1B1L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAGrBH,EAAAC,EAAAC,cAAA,MAAIwL,GAAG,kBAAkBJ,MAAO,CAACC,UAAW,SAAUoC,WAAY,MAAlE,iBAAuF3O,KAAKI,MAAMyC,WAGpG7B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKoL,MAAO,CAACC,UAAW,WACxBvL,EAAAC,EAAAC,cAAA,UAAQsL,QAAS,SAAApG,GAAK,OAAG0H,EAAK3D,YAAYhJ,UAAU,UAAUnB,KAAKI,MAAM+E,eAMzEnE,EAAAC,EAAAC,cAAA,OAAKoL,MAAO,CAAC/K,QAASvB,KAAKI,MAAM6F,mBAC/BjF,EAAAC,EAAAC,cAAA,MAAIoL,MAAO,CAACqC,WAAY,IAAKpC,UAAW,WAAxC,cACAvL,EAAAC,EAAAC,cAAA,OAAKwL,GAAG,QAAQvL,UAAU,SAC1BH,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAAA,OAAKoL,MAAO,CAAC/K,QAASvB,KAAKI,MAAMsE,YACjC1D,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKwL,GAAG,eACR1L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZnB,KAAKI,MAAM0F,YAId9E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAGFF,EAAAC,EAAAC,cAAA,OAAKwL,GAAG,eACR1L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZnB,KAAKI,MAAM2F,sBAt3BJrE,aCGEkN,QACW,cAA7BnP,OAAOsO,SAASc,UAEe,UAA7BpP,OAAOsO,SAASc,UAEhBpP,OAAOsO,SAASc,SAASC,MACvB,2DCZNC,IAASC,OAAOhO,EAAAC,EAAAC,cAAC+N,EAAD,MAASrB,SAASC,eAAe,SD2H3C,kBAAmBqB,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b1559413.chunk.js","sourcesContent":["import Web3 from 'web3';\r\n\r\nconst web3 = new Web3(window.web3.currentProvider);\r\n\r\nexport default web3;","import React, {Component} from 'react';\nimport {Bar} from 'react-chartjs-2';\n\nclass Chart extends Component {\n\n\n    static defaultProps = {\n        noData: 0,\n        yesData: 0\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            chartData: {\n                labels: ['No','Yes'],\n                datasets: [{\n                    label: 'Votes',\n                    data: [this.props.noData,this.props.yesData,0],\n                    backgroundColor:[\n                        'rgba(237, 45, 45,0.7)',\n                        'rgba(28, 181, 28,0.7)'\n                    ]\n                }]\n            }\n        }\n    }\n\n    test() {\n        console.log(this.props.noData);\n        console.log(this.props.yesData);\n    }\n\n    componentDidMount(){\n        this.test();\n    }\n\n    render() {\n        return(\n            <div className=\"chart\">\n            <Bar \n                data = {this.state.chartData}\n                options = {{\n                    title: {\n                        display:true,\n                        text: 'Poll Voting Data'\n                    },\n                    legend: {\n                        display: false\n                    }\n                }}\n            />\n            </div>\n        )\n    }\n}\n\nexport default Chart;","import React, {Component} from 'react';\nimport {Bar} from 'react-chartjs-2';\n\nclass MultiChart extends Component {\n\n\n    static defaultProps = {\n        labels: [],\n        results: [],\n        bcgColors: [],\n\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            chartData: {\n                labels: this.props.labels,\n                datasets: [{\n                    label: 'Votes',\n                    data: this.props.results,\n                    backgroundColor:this.props.bcgColors\n                }]\n            }\n        }\n    }\n\n    test() {\n        console.log(this.props.labels);\n        console.log(this.props.results);\n        console.log(this.props.bcgColors);\n    }\n\n\n    componentDidMount(){\n        this.test();\n    }\n\n    render() {\n        return(\n            <div className=\"chart\">\n            <Bar \n                data = {this.state.chartData}\n                options = {{\n                    title: {\n                        display:true,\n                        text: 'Poll Voting Data'\n                    },\n                    legend: {\n                        display: false\n                    }\n                }}\n            />\n            </div>\n        )\n    }\n}\n\nexport default MultiChart;","import web3 from './web3';\n\nconst address = '0x2907c2476ef38579a9e6650241da80ec1a8225ce';\n\nconst abi = \n[\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"activePolls\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"pollHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"pollStatus\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"isOpen\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"isPublic\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"yes\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"no\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"total\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"allowed\",\n\t\t\t\t\"type\": \"address[]\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"pollHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"cancelPoll\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"pollHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getName\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"polls\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"isClosed\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"isPublic\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"creator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"description\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"yesVotes\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"noVotes\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"totalVotes\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"start\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"expiration\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"pollHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getDesc\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"pollHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"isExpired\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"description\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"isPublic\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"allowed\",\n\t\t\t\t\"type\": \"address[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"expiration\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"createPoll\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"creator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"calcPollHash\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"pure\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"pollHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"voteChoice\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"vote\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"ownedPolls\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"pollHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"allowed\",\n\t\t\t\t\"type\": \"address[]\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"addAllowedUsers\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"archive\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"isClosed\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"isPublic\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"creator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"description\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"yesVotes\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"noVotes\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"totalVotes\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"start\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"expiration\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t}\n];\n\nexport default new web3.eth.Contract(abi, address);\n","import web3 from './web3';\n\nconst address = '0xd17C31De7eb280016001f87F5E0Efd0146fC3cc1';\n\nconst abi = \n[\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"activePolls\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"pollHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"pollStatus\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"isOpen\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"isPublic\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"options\",\n\t\t\t\t\"type\": \"string[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"results\",\n\t\t\t\t\"type\": \"uint256[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"allowed\",\n\t\t\t\t\"type\": \"address[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"total\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"pollHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"cancelPoll\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"pollHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getName\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"polls\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"isClosed\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"isPublic\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"creator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"description\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"totalVotes\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"start\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"expiration\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"pollHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getDesc\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"pollHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"isExpired\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"creator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"calcPollHash\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"pure\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"pollHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"voteChoice\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"vote\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"ownedPolls\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"pollHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"allowed\",\n\t\t\t\t\"type\": \"address[]\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"addAllowedUsers\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"description\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"options\",\n\t\t\t\t\"type\": \"string[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"allowed\",\n\t\t\t\t\"type\": \"address[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"isPublic\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"expiration\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"createPoll\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"archive\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"isClosed\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"isPublic\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"creator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"description\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"totalVotes\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"start\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"expiration\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t}\n];\n\nexport default new web3.eth.Contract(abi, address);","import React, { Component } from 'react';\nimport './App.css';\nimport web3 from './web3';\nimport './App.css';\nimport Chart from './components/Chart';\nimport MultiChart from './components/Multichart';\nimport yesNo from './yesNo';\nimport multiData from './multiData';\n\nclass App extends Component {\n\n  state = {\n    user: '',\n    userMessage:'',\n    pollhash: '',\n    pollType: '',\n    pollName: '',\n    pollDescription: '',\n    ispublic: '',\n    colorList: ['#C7CEEA','#B5EAD7','#E2F0CB','#FFDAC1','#FFB7B2'],\n    modColorList: [],\n    allowed: [],\n    isallowed: false,\n    spinnerdisplay: 'none',\n    votecasted: 'none',\n    expiration: 0,\n    // Yes/No State Variables\n    yesVotes: '',\n    noVotes: '',\n    chart: '',\n    yesNoDisplay: 'none',\n    // Multi-Data State Variables\n    options: [],\n    results: [],\n    multiChart: '',\n    multiDataDisplay: 'none',\n    multiDataHTML: [],\n    voteOptionsHTML: [],\n    voteChoice: 0,\n    votebtndisplay: 'none',\n    //Display variables for each option\n    o1: 'none',\n    o2: 'none',\n    o3: 'none',\n    o4: 'none',\n    o5: 'none',\n    // Diplay of the website sectioins\n    searchdisplay: 'initial',\n    createdisplay: 'none',\n    mydisplay: 'none',\n    // other\n    step: '1',\n    option1: '',\n    option2: '',\n    option3: '',\n    option4: '',\n    option5: '',\n    hasPassed: false,\n    isready: 0,\n    buttonText: 'Next Steps',\n    createspinner: 'none',\n    // Display of Create Poll Sections\n    ispublicDisplay: 'none',\n    pollTypeDisplay: 'initial',\n    enterNameDisplay: 'none',\n    expirationDisplay: 'none',\n    optionsDisplay: 'none',\n    allowedDisplay: 'none',\n    createpolldisplay: 'none',\n    // Poll Dashboard\n    pollHashListYesNo: [],\n    pollHashListMulti: [],\n    yesNoHTML: [],\n    multiHTML: [],\n    multiPollHashDisplay: [],\n    dashboardSpinner: 'none'\n  };\n  \n  // Determine and Initialize the User\n  getUser = async (event) => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      this.setState({user: accounts[0]});\n      if (web3.currentProvider['host'] === 'metamask') {\n        window.web3.currentProvider.enable();\n      }\n      \n      this.setState({userMessage: 'Current User:'});\n    }\n    catch (e) {\n      console.log(e);\n      this.setState({user: ''});\n      this.setState({userMessage: ''});\n      alert(\"Please make sure either metamask is installed and you are logged into it or you are using an Ethereum Browser\");\n      this.setState({mustHave: 'You Must Have Metamask or an Ethereum browser in order to use this DApp. Recommended:' + <a href=\"https://metamask.io\">\"metamask.io\"</a>})\n    }\n  }\n// Search Poll, return status if it exists\n  searchPoll = async (event) => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n\n      if (this.state.pollhash === '') {\n        alert(\"This Poll Hash does not exist or is not valid\");\n      }\n      else if (this.state.pollType === '') {\n        alert('Please select the poll type.');\n      }\n      else if (this.state.pollType === 'yesNo') {\n        // Hide MultiData Poll\n        this.setState({multiDataDisplay: 'none'});\n\n        //Fetch Data from Ethereum\n        const status = await yesNo.methods.pollStatus(this.state.pollhash).call({\n          from: accounts[0]\n        });\n\n        //Set Poll Properties\n        this.setState({noVotes: status['no']});\n        this.setState({yesVotes: status['yes']});\n        this.setState({ispublic: status['isPublic']});\n        this.setState({allowed: status['allowed']});\n        this.setState({pollDescription: await yesNo.methods.getDesc(this.state.pollhash).call()});\n        this.setState({pollName: await yesNo.methods.getName(this.state.pollhash).call()}); \n        this.setState({yesNoDisplay: 'initial'});\n\n        for (var i = 0; i < this.state.allowed.length; i++) {\n          if (this.state.allowed[i] === accounts[0]) {\n            this.setState({isallowed: true});\n            this.setState({votebtndisplay: 'initial'});\n          }\n        }\n        if (this.state.allowed.length === 0) {\n          this.setState({votebtndisplay: 'initial'});\n          this.setState({isallowed: true});\n        }\n        else if (this.state.isallowed === false) {\n          this.setState({allowedmessage: \"You are not allowed to vote on this poll.\"});\n        }\n\n        // Checks if poll is expired\n        const isexpired = await yesNo.methods.isExpired(this.state.pollhash).call();\n        if (isexpired === true) {\n          this.setState({allowedmessage: \"This poll has expired\"});\n          this.setState({votebtndisplay: 'none'});\n        }\n        \n        //Create Chart\n        this.setState({chart: <Chart yesData={parseInt(this.state.yesVotes)} noData={parseInt(this.state.noVotes)} redraw/>});\n      }\n      else if (this.state.pollType === 'multiData') {\n        // Hide YesNo Poll\n        this.setState({yesNoDisplay: 'none'});    \n\n        //Fetch Poll Data from Ethereum\n        const status = await multiData.methods.pollStatus(this.state.pollhash).call({\n          from: accounts[0]\n        });\n\n        // Set Poll Property Values\n        this.setState({results: status['results']});\n        this.setState({options: status['options']});\n        this.setState({allowed: status['allowed']});\n        this.setState({ispublic: status['isPublic']});\n        this.setState({pollDescription: await multiData.methods.getDesc(this.state.pollhash).call()});\n        this.setState({pollName: await multiData.methods.getName(this.state.pollhash).call()});\n        \n\n        // Check if user is allowed and display appropriately\n\n        for (var y = 0; y < this.state.allowed.length; y++) {\n          if (this.state.allowed[y] === accounts[0]) {\n            this.setState({isallowed: true});\n            this.setState({votebtndisplay: 'initial'});\n          } \n        }\n        if (this.state.allowed.length === 0) {\n          this.setState({votebtndisplay: 'initial'});\n          this.setState({isallowed: true});\n        }\n        else if (this.state.isallowed === false) {\n          this.setState({allowedmessage: \"You are not allowed to vote on this poll.\"});\n        }\n\n        // Checks if poll is expired\n        const isexpired = await multiData.methods.isExpired(this.state.pollhash).call();\n        if (isexpired === true) {\n          this.setState({allowedmessage: \"This poll has expired\"});\n          this.setState({votebtndisplay: 'none'});\n        }\n\n        // Create Proper Color List & Pass in Values to MultiChart\n        this.setState({modColorList: this.state.colorList.slice(0,this.state.colorList.length-1)});\n        this.setState({multiChart: <MultiChart labels={this.state.options} results={this.state.results} bcgColors={this.state.modColorList} redraw/>})\n\n        // Create Options & Votes List, to be rendered\n        const newList = [];\n        for (var x= 0; x < this.state.options.length; x++) {\n          newList.push(<h4>{this.state.options[x]}: {this.state.results[x]}</h4>);\n        }\n        this.setState({multiDataHTML: newList});\n\n        // Manually set display values for option list *MUST IMPROVE\n        if(this.state.options.length === 5) {\n          this.setState({o1: \"initial\"});\n          this.setState({o2: \"initial\"});\n          this.setState({o3: \"initial\"});\n          this.setState({o4: \"initial\"});\n          this.setState({o5: \"initial\"});\n        } else if(this.state.options.length === 4) {\n          this.setState({o1: \"initial\"});\n          this.setState({o2: \"initial\"});\n          this.setState({o3: \"initial\"});\n          this.setState({o4: \"initial\"});\n        } else if(this.state.options.length === 3) {\n          this.setState({o1: \"initial\"});\n          this.setState({o2: \"initial\"});\n          this.setState({o3: \"initial\"});\n        } else if(this.state.options.length === 2) {\n          this.setState({o1: \"initial\"});\n          this.setState({o2: \"initial\"});\n        }\n        // Display Multi Data Poll\n        this.setState({multiDataDisplay: 'initial'});\n      }\n    } \n    catch(e) {\n      console.log(e);\n      alert(\"Please make sure the pollhash is valid. Otherwise ensure that either metamask is installed and you are logged into it or you are using an Ethereum Browser\");\n    }\n  }\n\n  // Vote Yes on a Yes/No Poll\n  voteYes = async (event) => {\n    var bool = false;\n    try {\n      const accounts = await web3.eth.getAccounts();\n      bool = true;\n      this.setState({spinnerdisplay: \"initial\"});\n\n      await yesNo.methods.vote(this.state.pollhash,true).send({\n        from: accounts[0]\n      });\n      this.setState({spinnerdisplay: 'none'});\n      this.setState({votecasted: 'initial'});\n    }\n    catch (e) {\n      if (bool === false) {\n        console.log(e);\n        alert(\"Please make sure either metamask is installed and you are logged into it or you are using an Ethereum Browser\");\n      } else{\n      this.setState({spinnerdisplay: \"none\"});\n      this.setState({votecasted: 'initial'});\n      }\n    }\n  }\n\n  // Vote NO on a Yes/No Poll\n  voteNo = async (event) => {\n    var bool = false\n    try {\n      const accounts = await web3.eth.getAccounts();\n      bool = true;\n      this.setState({spinnerdisplay: \"initial\"});\n      await yesNo.methods.vote(this.state.pollhash,false).send({\n        from: accounts[0]\n      });\n      this.setState({spinnerdisplay: \"none\"});\n      this.setState({votecasted: 'initial'});\n    }\n    catch (e) {\n      if (bool === false) {\n        console.log(e);\n        alert(\"Please make sure either metamask is installed and you are logged into it or you are using an Ethereum Browser\");\n      } else{\n      this.setState({spinnerdisplay: \"none\"});\n      this.setState({votecasted: 'initial'});\n      }\n    }\n  }\n\n  // Cast vote on MultiData POll\n  multiVote = async (event) => {\n    var bool = false;\n    try {\n      const accounts = await web3.eth.getAccounts();\n\n      bool = true;\n      this.setState({spinnerdisplay: \"initial\"});\n\n      await multiData.methods.vote(this.state.pollhash,this.state.voteChoice+1).send({\n        from: accounts[0]\n      });\n      this.setState({spinnerdisplay: \"none\"});\n      this.setState({votecasted: 'initial'});\n    }\n    catch (e) {\n      if (bool === false) {\n        console.log(e);\n        alert(\"Please make sure either metamask is installed and you are logged into it or you are using an Ethereum Browser\");\n      } else{\n      this.setState({spinnerdisplay: \"none\"});\n      this.setState({votecasted: 'initial'});\n      }\n    }\n  }\n\n  // Algorithm for going through the process of creating any type of poll.\n  nextstep = async (event) => {\n    try {\n      let newstep = 1;\n      if (parseInt(this.state.step) < 6) {\n        if (this.state.step === '1') {\n          this.setState({pollTypeDisplay: 'none'});\n          this.setState({ispublicDisplay: 'initial'});\n        } \n        else if (this.state.step === 2) {\n          this.setState({ispublicDisplay: 'none'});\n          this.setState({enterNameDisplay: 'initial'});\n        }\n        else if (this.state.step === 3 ) {\n          this.setState({enterNameDisplay: 'none'});\n          this.setState({expirationDisplay: 'initial'});\n          if (this.state.ispublic === true && this.state.pollType === 'yesNo') {\n            newstep+=2;\n          }\n        }\n        else if (this.state.pollType === \"multiData\" && this.state.hasPassed === false) {\n          this.setState({expirationDisplay: 'none'});\n          this.setState({optionsDisplay: 'initial'});\n          this.setState({hasPassed: true});\n          if(this.state.ispublic === true) {\n            newstep+=1;\n          }\n        }\n        else if (this.state.ispublic === false) {\n          this.setState({optionsDisplay: 'none'});\n          this.setState({expirationDisplay: 'none'});\n          this.setState({allowedDisplay: 'initial'});\n          newstep+=1;\n        }\n      }\n      else if (this.state.ispublic === true && this.state.pollType === 'multiData') {\n        if (this.state.isready > 0) {\n          this.setState({createspinner: 'initial'});\n          const accounts = await web3.eth.getAccounts();\n          const newPollHash = await multiData.methods.calcPollHash(this.state.pollName,accounts[0]).call();\n\n          await this.setState({pollhash: newPollHash});\n\n          await multiData.methods.createPoll(this.state.pollDescription,this.state.pollName,\n            [this.state.option1,this.state.option2,this.state.option3,this.state.option4,this.state.option5],\n            [],true,this.state.expiration*3600).send({\n            from: accounts[0]\n          });\n\n        }\n        else {\n          this.setState({isready: 1});\n          this.setState({createpolldisplay: 'initial'});\n          this.setState({optionsDisplay: 'none'});\n          this.setState({expirationDisplay: 'none'});\n          this.setState({buttonText: 'Create Your Poll'});\n        }\n      }\n      else if (this.state.ispublic === false && this.state.pollType === 'multiData') {\n        if (this.state.isready > 0) {\n          this.setState({createspinner: 'initial'});\n          const accounts = await web3.eth.getAccounts();\n\n          let newArr = []\n\n          for (var x = 0; x < this.state.allowed.length; x++) {\n            newArr.push(this.state.allowed[x].replace(/^\\s+|\\s+$/g, ''));\n          }\n\n          await this.setState({allowed: newArr});\n\n          const newPollHash = await multiData.methods.calcPollHash(this.state.pollName,accounts[0]).call();\n\n          await this.setState({pollhash: newPollHash});\n\n          await multiData.methods.createPoll(this.state.pollDescription,this.state.pollName,\n            [this.state.option1,this.state.option2,this.state.option3,this.state.option4,this.state.option5]\n            ,this.state.allowed,false,this.state.expiration*3600).send({\n            from: accounts[0]\n          });\n        }\n        else {\n          this.setState({isready: 1});\n          this.setState({createpolldisplay: 'initial'});\n          this.setState({optionsDisplay: 'none'});\n          this.setState({expirationDisplay: 'none'});\n          this.setState({allowedDisplay: 'none'});\n          this.setState({buttonText: 'Create Your Poll'});\n        }\n      }\n      else if (this.state.ispublic === true && this.state.pollType === \"yesNo\") {\n        if (this.state.isready > 0) {\n          this.setState({createspinner: 'initial'});\n          const accounts = await web3.eth.getAccounts();\n\n          const newPollHash = await yesNo.methods.calcPollHash(this.state.pollName,accounts[0]).call();\n\n          await this.setState({pollhash: newPollHash});\n\n          await yesNo.methods.createPoll(this.state.pollDescription,this.state.pollName,true,[],this.state.expiration*3600).send({\n            from: accounts[0]\n          });\n\n        }\n        else {\n          this.setState({isready: 1});\n          this.setState({createpolldisplay: 'initial'});\n          this.setState({optionsDisplay: 'none'});\n          this.setState({expirationDisplay: 'none'});\n          this.setState({buttonText: 'Create Your Poll'}); \n        }\n      }\n      else if (this.state.ispublic === false && this.state.pollType === \"yesNo\") {\n        if (this.state.isready > 0) {\n          this.setState({createspinner: 'initial'});\n          const accounts = await web3.eth.getAccounts();\n          let newArr = []\n\n          for (var y = 0; y < this.state.allowed.length; y++) {\n            newArr.push(this.state.allowed[y].replace(/^\\s+|\\s+$/g, ''));\n          }\n          const newPollHash = await yesNo.methods.calcPollHash(this.state.pollName,accounts[0]).call();\n\n          await this.setState({pollhash: newPollHash});\n\n          await this.setState({allowed: newArr});\n\n          await yesNo.methods.createPoll(this.state.pollDescription,this.state.pollName,false,this.state.allowed,this.state.expiration*3600).send({\n            from: accounts[0]\n          });\n        }\n        else {\n          this.setState({isready: 1});\n          this.setState({createpolldisplay: 'initial'});\n          this.setState({optionsDisplay: 'none'});\n          this.setState({expirationDisplay: 'none'});\n          this.setState({allowedDisplay: 'none'});\n          this.setState({buttonText: 'Create Your Poll'}); \n        }\n      }\n      newstep+=parseInt(this.state.step);\n      this.setState({step: newstep});\n    }\n    catch(e) {\n      this.setState({createspinner: 'none'});\n    }\n  }\n\n  switchDisplay(ID) {\n    if(document.getElementById(ID).style.display === \"none\") {\n      document.getElementById(ID).style.display = \"inline\";\n      console.log('success');\n    }\n    else\n      document.getElementById(ID).style.display = \"none\";\n  }\n\n  getYesNo = async (event) => {\n    let hashlist = [];\n    let counter = 0;\n    const accounts = await web3.eth.getAccounts();\n\n    // fetching poll Hashes for yesNo\n    while(counter < 256) {\n      try {\n        hashlist.push(await yesNo.methods.activePolls(this.state.user, counter).call());\n        counter++;\n      }\n      catch(e) {\n        break;\n      }\n    }\n    await this.setState({pollHashListYesNo: hashlist});\n  \n    // get YesNo HTML\n    let htmlInnerList = []\n    let htmlList = [<h2 key=\"yes/nopoll text\">Yes/No Polls</h2>]\n    for (var x = 0; x < this.state.pollHashListYesNo.length;x++){\n\n      const status = await yesNo.methods.pollStatus(this.state.pollHashListYesNo[x]).call({\n        from: accounts[0]\n      });\n\n      const no = status['no'];\n      const yes = status['yes'];\n      const name = await yesNo.methods.getName(this.state.pollHashListYesNo[x]).call();\n      const desc = await yesNo.methods.getDesc(this.state.pollHashListYesNo[x]).call();\n      const yesNoId = \"yesNo\"+x.toString();\n\n      let pollhtml = \n      <div className=\"column\" style={{textAlign:'center'}}><h3>{name}</h3>\n      <p>{desc}</p><p>Yes Votes: {yes}</p><p>No Votes: {no}</p>\n      <button className=\"pollhashbutton\" onClick={event=> this.switchDisplay(yesNoId)}>\n        Show Poll ID\n      </button>\n      <br/>\n      <p id ={yesNoId} style={{fontSize: '11px',display: 'none'}}>{this.state.pollHashListYesNo[x]}</p></div>;\n      \n      htmlInnerList.splice(htmlInnerList.length-2,0,pollhtml);\n\n      if(x+1 > 2 && ((x+1) % 3 === 0)) {\n        htmlList.push(htmlInnerList);\n        htmlList.push([<br/>]);\n        htmlList.push([<span key={\"yesNoSPanStyle\"+x.toString()} style={{marginLeft: '10%', marginRight: '10%'}}><hr/></span>]);\n        htmlInnerList = [];\n      } else if (x+1 === this.state.pollHashListYesNo.length){\n        htmlList.push(htmlInnerList);\n        htmlList.push([<br/>]);\n        htmlInnerList = [];\n      }\n    }\n\n    if(htmlList.length > 1)\n      this.setState({yesNoHTML: htmlList});\n\n\n  }\n\n  getMulti = async (event) => {\n    let counter = 0;\n    let hashlist = [];\n    const accounts = await web3.eth.getAccounts();\n\n    // fetching poll hashes for multiData\n    while(counter < 256) {\n      try{\n        hashlist.push(await multiData.methods.activePolls(this.state.user,counter).call());\n        counter++;\n      }\n      catch(e){\n        break;\n      }\n    }\n    await this.setState({pollHashListMulti: hashlist});\n\n    // get MultiData HTML\n    let htmlInnerList = [];\n    let htmlList = [<h2 key=\"multidata key\">Multi-Data Polls</h2>];\n    for (var y = 0; y < this.state.pollHashListMulti.length;y++){\n\n      const status = await multiData.methods.pollStatus(this.state.pollHashListMulti[y]).call({\n        from: accounts[0]\n      });\n\n      const tempResults = status['results'];\n      const tempOptions = status['options'];\n      const name = await multiData.methods.getName(this.state.pollHashListMulti[y]).call();\n      const desc = await multiData.methods.getDesc(this.state.pollHashListMulti[y]).call();\n      // Only use the options being used\n      let optionList = []\n      for (var i =0; i < tempOptions.length; i++) {\n        if (tempOptions[i] !== '')\n          optionList.push(<p key={\"optionKey\"+y.toString()+i.toString()}>{tempOptions[i]+': '+tempResults[i]}</p>);\n      }\n\n      const id = 'multi'+y.toString();\n      let pollhtml = \n      <div className=\"column\" style={{textAlign: 'center'}}>\n      <h3>{name}</h3>\n      <p>{desc}</p>\n      {optionList}\n      <button className=\"pollhashbutton\" onClick={event=> this.switchDisplay(id)}>\n        Show Poll ID\n      </button>\n      <br/>\n      <p id ={id} style={{fontSize: '11px',display: 'none'}}>{this.state.pollHashListMulti[y]}</p>\n      </div>;\n      \n      htmlInnerList.splice(htmlInnerList.length-2,0,pollhtml);\n\n      if(y+1 > 2 && ((y+1) % 3 === 0)) {\n        htmlList.push(htmlInnerList);\n        htmlList.push([<br/>]);\n        htmlList.push([<span key ={\"spanstyle\"+y.toString()} style={{marginLeft: '10%', marginRight: '10%'}}><hr/></span>]);\n        htmlInnerList = [];\n      } else if (y+1 === this.state.pollHashListMulti.length){\n        htmlList.push(htmlInnerList);\n        htmlList.push([<br/>]);\n        htmlInnerList = [];\n      }\n    }\n\n    if(htmlList.length > 1)\n      this.setState({multiHTML: htmlList});\n  }\n\n  displayDashboard = async (event) =>{\n    await this.setState({createdisplay: 'none', mydisplay: 'initial', searchdisplay: 'none'});\n    await this.setState({dashboardSpinner: 'initial'});\n    await this.getMulti();\n    await this.getYesNo();\n    await this.setState({dashboardSpinner: 'none'});\n  }\n\n  // Fetch User Only once, when the user opens the app\n  componentDidMount() {\n    this.getUser();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <div className = \"header\">\n          <h1><a href=\"https://ethpolls.com\" className =\"title\">EthPolls</a></h1>\n          <br/>\n          <br/>\n          <br/>\n        </div>\n\n        <br/>\n\n        <div className=\"subheader\">\n          <p className = \"user\"><span className=\"pulsate\"><span className=\"userMessage\">{this.state.userMessage}</span> {this.state.user}</span></p>\n          <span className = \"switches\">\n            <button className=\"astext\" onClick={event=> window.location.reload()}>Search for a Poll</button> <span className = \"lines\"> | </span> \n            <button className=\"astext\" onClick= {event=> this.setState({createdisplay: 'initial', mydisplay: 'none', searchdisplay: 'none'})}>Create a Poll</button> <span className = \"lines\"> | </span> \n            <button className=\"astext\" onClick= {event=> this.displayDashboard()}>View My Polls</button>\n          </span>\n        </div>\n\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n\n        {/*********** Search for Poll *************/}\n        <div className=\"pollSearch\" style={{display: this.state.searchdisplay}}>\n        <div className=\"searchBox\">\n          <h1>Enter Poll ID</h1>\n          <p>Enter the Poll ID of the poll you wish to search then select its poll type</p>\n          <br/>\n          <br/>\n          <input type=\"text\" placeholder=\"Type Poll ID Here ...\" pollhash = {this.state.value} onChange={event=> this.setState({pollhash: event.target.value})}/>\n          <br/>\n          <br/>\n          <br/>\n        </div>\n\n        <div className=\"radioButtons\">\n        <label className=\"container\">Yes/No Poll\n            <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({pollType: 'yesNo'})}/>\n            <span className=\"checkmark\"></span>\n          </label>\n\n          <label className=\"container\">Multi-Data Poll\n            <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({pollType: 'multiData'})}/>\n            <span className=\"checkmark\"></span>\n        </label>\n        </div>\n\n        <br/>\n        <br/>\n\n        <div className =\"centerbtn\">\n          <button onClick={this.searchPoll} className=\"button\">Search</button>\n        </div>\n\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        {/******************************* YES NO POLL  ************************************/}\n        <div className = \"poll\" id=\"yesNo\" style={{display: this.state.yesNoDisplay}}>\n          <p>Poll Name:</p>\n          <h1>{this.state.pollName}</h1>\n          <p>Description:</p>\n          <h4>{this.state.pollDescription}</h4>\n          <h4><span style={{textAlign: \"left\"}}>No Votes: {this.state.noVotes}</span>&nbsp;&nbsp;&nbsp;&nbsp;\n          <span style={{textAlign: \"right\"}}>Yes Votes: {this.state.yesVotes}</span></h4>\n          <div className=\"chart\">\n          {this.state.chart}\n          <p>{this.state.allowedmessage}</p>\n          <span><button style={{display: this.state.votebtndisplay}} onClick={this.voteNo}id=\"noBtn\">Vote No</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button style={{display: this.state.votebtndisplay}} onClick={this.voteYes} id=\"yesBtn\">Vote Yes</button></span>\n          </div>\n          <br/>\n          <div className=\"loading-spinner\" style={{display: this.state.spinnerdisplay, textAlign: 'center'}}>\n          <div className=\"load-1\">\n                <p className=\"pulsate\">Voting...(Approximately 1 Minute)</p>\n                <div className=\"line\" id =\"clearline\"></div>\n                <div className=\"line\"></div>\n                <div className=\"line\"></div>\n                <div className=\"line\"></div>\n            </div>\n          </div>\n          <div className = \"center\">\n          <h4 style={{display: this.state.votecasted, textAlign: 'center', color: '#383838'\t}}>Your vote has been casted! Refresh the page and re-enter the poll hash to see the updated results!</h4>\n          </div>\n          <br/>\n          <br/>\n        </div>\n\n        {/******************************* MULTI DATA POLL  ************************************/}\n        <div className = \"poll\" id=\"multiData\" style={{display: this.state.multiDataDisplay}}>\n          <p>Poll Name:</p>\n          <h1>{this.state.pollName}</h1>\n          <p>Description:</p>\n          <h4>{this.state.pollDescription}</h4>\n          {this.state.multiDataHTML}\n          <div className = \"multiChart\">\n            {this.state.multiChart}\n          </div>\n          <div className=\"radioButtons\">\n            <label style={{display:this.state.o1}} className=\"container\"> {this.state.options[0]}\n              <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({voteChoice: 0})}/>\n              <span className=\"checkmark\"></span>\n            </label>\n          </div>\n          <div className=\"radioButtons\">\n            <label style={{display:this.state.o2}} className=\"container\">{this.state.options[1]}\n                <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({voteChoice: 1})}/>\n                <span className=\"checkmark\"></span>\n            </label>\n          </div>\n          <div className=\"radioButtons\">\n            <label style={{display:this.state.o3}} className=\"container\">{this.state.options[2]}\n                <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({voteChoice: 2})}/>\n                <span className=\"checkmark\"></span>\n            </label>\n          </div>\n          <div className=\"radioButtons\">\n            <label style={{display:this.state.o4}} className=\"container\">{this.state.options[3]}\n                <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({voteChoice: 3})}/>\n                <span className=\"checkmark\"></span>\n            </label>\n          </div>\n          <div className=\"radioButtons\">\n            <label style={{display:this.state.o5}} className=\"container\">{this.state.options[4]}\n                <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({voteChoice: 4})}/>\n                <span className=\"checkmark\"></span>\n            </label>\n        </div>\n        <p>{this.state.allowedmessage}</p>\n          <div className =\"multiBtn\" >\n            <button style={{display: this.state.votebtndisplay}} onClick = {this.multiVote} id=\"multiVote\">Vote</button>\n          </div>\n          <br/>\n          <div className=\"loading-spinner\" style={{display: this.state.spinnerdisplay, textAlign: 'center'}}>\n          <div className=\"load-1\">\n                <p className=\"pulsate\">Voting...(Approximately 1 Minute)</p>\n                <div className=\"line\" id =\"clearline\"></div>\n                <div className=\"line\"></div>\n                <div className=\"line\"></div>\n                <div className=\"line\"></div>\n            </div>\n          </div>\n          <div className=\"center\">\n          <h4 style={{display: this.state.votecasted, textAlign: 'center', color: '#383838'\t}}>Your vote has been casted! Refresh the page and re-enter the poll hash to see the updated results!</h4>\n          </div>\n        </div>\n        <br/>\n        </div>\n\n        {/******************** Create a Poll ******************* */}\n        <div className=\"createPoll\" style={{display: this.state.createdisplay}}>\n          <div className=\"searchbox\">\n            <h4 style={{marginLeft: '25%'}}>Step {this.state.step}</h4>\n          {/** Choose Poll Type (MultiData / YesNo) **/}\n          <div style={{display: this.state.pollTypeDisplay}}>\n          <h1 style={{textAlign: 'center'}}>Choose Poll Type</h1>\n            <p style={{textAlign: 'center'}}>Decide which type of poll you would like to create</p>\n            <div className=\"radioButtons\">\n        <label className=\"container\">Yes/No Poll\n            <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({pollType: 'yesNo'})}/>\n            <span className=\"checkmark\"></span>\n          </label>\n\n          <label className=\"container\">Multi-Data Poll\n            <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({pollType: 'multiData'})}/>\n            <span className=\"checkmark\"></span>\n        </label>\n        </div>\n        </div>\n\n          {/** Choose Public/Private **/}\n        <div style={{display: this.state.ispublicDisplay}}>\n        <h1 style={{textAlign: 'center'}}>Choose Poll Type</h1>\n            <p style={{textAlign: 'center'}}>Decide which type of poll you would like to create</p>\n        <div className=\"radioButtons\" >\n        <label className=\"container\">Public\n            <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({ispublic: true})}/>\n            <span className=\"checkmark\"></span>\n          </label>\n\n          <label className=\"container\">Restricted (only users you choose can vote)\n            <input  name =\"radio\" type=\"radio\" onClick={event=> this.setState({ispublic: false})}/>\n            <span  className=\"checkmark\"></span>\n        </label>\n        </div>\n        </div>\n\n          {/* Enter Poll Name and Description */}\n        <div style={{display: this.state.enterNameDisplay}}>\n          <h1 style={{textAlign: 'center'}}>Enter Poll Name and Description</h1>\n          <p style={{textAlign: 'center'}}>Type the name of your poll followed by a description</p>\n          <div style={{textAlign: 'center'}}>\n          <input onChange={event=> this.setState({pollName: event.target.value})} placeholder=\"Enter Name Here\" id=\"my-text-field\" type=\"text\" maxLength=\"100\" style={{width: '12%', color: 'black'}}/>\n          <br/>\n          <br/>\n          <textarea onChange={event=> this.setState({pollDescription: event.target.value})} id=\"my-textarea\"maxLength=\"500\" data-counter-label=\"\" style={{ height: '300px', width: '300px'}}></textarea>\n          </div>      \n        </div>\n\n          {/* Enter Poll Expiration */}\n          <div style={{display: this.state.expirationDisplay}}>\n          <h1 style={{textAlign: 'center'}}>Decide if your poll will expire</h1>\n          <p style={{textAlign: 'center'}}>Choose whether or not your poll will expire. If your poll will not expire, enter 0. Otherwise select the amount of hours it will last.</p>\n          <div style={{textAlign: 'center'}}>\n            <input onChange={event=> this.setState({expiration: parseInt(event.target.value)})} placeholder=\"Hours\" id=\"my-text-field\" type=\"text\" maxLength=\"15\" style={{width: '8%', color: 'black'}}/>\n            <br/>\n          </div>  \n          </div>\n\n          {/* Enter options if multi data poll */}\n          <div style={{display: this.state.optionsDisplay}}>\n          <h1 style={{textAlign: 'center'}}>Enter your Voting Options</h1>\n          <p style={{textAlign: 'center'}}>Type in the things that voters will be voting on.</p>\n          <div style={{textAlign: 'center'}}>\n            <input onChange={event=> this.setState({option1: event.target.value})} placeholder=\"Option 1\" id=\"my-text-field\" type=\"text\"  style={{width: '8%', color: 'black'}}/>\n            <br/>\n            <input onChange={event=> this.setState({option2: event.target.value})} placeholder=\"Option 2\" id=\"my-text-field\" type=\"text\"  style={{width: '8%', color: 'black'}}/>\n            <br/>\n            <input onChange={event=> this.setState({option3: event.target.value})} placeholder=\"Option 3\" id=\"my-text-field\" type=\"text\"  style={{width: '8%', color: 'black'}}/>\n            <br/>\n            <input onChange={event=> this.setState({option4: event.target.value})} placeholder=\"Option 4\" id=\"my-text-field\" type=\"text\"  style={{width: '8%', color: 'black'}}/>\n            <br/>\n            <input onChange={event=> this.setState({option5: event.target.value})} placeholder=\"Option 5\" id=\"my-text-field\" type=\"text\"  style={{width: '8%', color: 'black'}}/>\n            <br/>\n          </div>  \n          </div>\n\n          {/* Enter Allowed Users */}\n          <div style={{display: this.state.allowedDisplay}}>\n          <h1 style={{textAlign: 'center'}}>Enter a comma separated list of users</h1>\n          <p style={{textAlign: 'center'}}>Example: 0x74ff48fc3762eB4dC5E579A73ECffCBab4b9939E,0x9E01CBf6e04aBc6157Fe538A4EB03D879B670af0,0xCE43a16E7a848F9c51f41Ef1b77022118527d41A</p>\n          <div style={{textAlign: 'center'}}>\n            <textarea onChange={event=> this.setState({allowed: event.target.value.split(\",\")})} id=\"my-textarea\" maxLength=\"100000\" data-counter-label=\"\" style={{ height: '300px', width: '300px'}}></textarea>\n            <br/>\n          </div> \n          </div>\n\n          {/* Create Poll Display */}\n          <div style={{display: this.state.createpolldisplay}}>\n          <h1 style={{textAlign: 'center'}}>Click the button to create your poll</h1>\n          <p style={{textAlign: 'center'}}>Once your poll has been created you will be given the Poll ID. This is used when searching for polls.</p>\n          <br/>\n          <div style={{display: this.state.createspinner, textAlign: 'center'}}>\n          <div className=\"load-1\">\n                <p className=\"pulsate\">Creating Poll...(Approximately 1 Minute)</p>\n                <div className=\"line\" id =\"clearline\"></div>\n                <div className=\"line\"></div>\n                <div className=\"line\"></div>\n                <div className=\"line\"></div>\n            </div>\n          </div>\n          <h2 id=\"createdPollHash\" style={{textAlign: 'center', fontWeight: 300}}>Your Poll ID: {this.state.pollhash}</h2>\n          </div>\n\n        <br/>\n        <div style={{textAlign: 'center'}} >\n        <button onClick={event=> this.nextstep()} className=\"button\">{this.state.buttonText}</button>\n        </div>\n          </div>\n        </div>\n\n        {/***************** Poll Dashboard *****************/}\n        <div style={{display: this.state.dashboardSpinner}}>\n          <h4 style={{fontWeight: 300, textAlign: 'center'}}>Loading...</h4>\n          <div id=\"rect1\" className=\"wave\"></div>\n          <br/>\n        </div>\n        <div style={{display: this.state.mydisplay}}>\n        <div>\n        {/* Three Column Layout for poll visual */}\n        <div id=\"dashwrapper\">\n        <div className=\"row\">\n          {this.state.yesNoHTML}\n        </div>\n        </div>\n\n        <div>\n          <br/>\n          <br/>\n          <br/>\n        </div>\n\n        <div id=\"dashwrapper\">\n        <div className=\"row\">\n          {this.state.multiHTML}\n        </div>\n        </div>\n\n        </div>\n        </div>\n\n      {/* End */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}