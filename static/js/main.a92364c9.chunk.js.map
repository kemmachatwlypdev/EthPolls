{"version":3,"sources":["web3.js","yesNo.js","multiData.js","components/Chart.js","components/Multichart.js","App.js","serviceWorker.js","index.js"],"names":["web3","Web3","window","currentProvider","yesNo","eth","Contract","constant","inputs","name","type","outputs","payable","stateMutability","multiData","Chart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","chartData","labels","datasets","label","data","noData","yesData","backgroundColor","console","log","test","react_default","a","createElement","className","es","options","title","display","text","legend","Component","defaultProps","MultiChart","results","bcgColors","App","user","userMessage","pollhash","pollType","pollName","pollDescription","ispublic","allowed","isallowed","spinnerdisplay","votecasted","expiration","yesVotes","noVotes","chart","yesNoDisplay","multiChart","multiDataDisplay","multiDataHTML","voteOptionsHTML","voteChoice","votebtndisplay","colorList","modColorList","o1","o2","o3","o4","o5","searchdisplay","createdisplay","mydisplay","option1","option2","option3","option4","option5","step","hasPassed","isready","buttonText","createspinner","ispublicDisplay","pollTypeDisplay","enterNameDisplay","expirationDisplay","optionsDisplay","allowedDisplay","createpolldisplay","pollHashListYesNo","pollHashListMulti","yesNoHTML","multiHTML","multiPollHashDisplay","dashboardSpinner","getUser","_callee","event","regenerator_default","wrap","_context","prev","next","stop","searchPoll","_callee2","accounts","status","novotes","yesvotes","i","_status","resultss","optionss","allowedd","y","_context2","getAccounts","sent","alert","setState","methods","pollStatus","from","parseInt","t0","getDesc","t1","t2","t3","getName","t4","t5","length","allowedmessage","isExpired","components_Chart","redraw","t6","t7","t8","t9","t10","t11","slice","Multichart","t12","voteYes","_callee3","bool","_context3","vote","send","voteNo","_callee4","_context4","multiVote","_callee5","_context5","nextstep","_callee6","newstep","newPollHash","_accounts","newArr","x","_newPollHash","_accounts2","_newPollHash2","_accounts3","_newArr","_newPollHash3","_context6","calcPollHash","createPoll","push","replace","getYesNo","_callee7","hashlist","counter","hash","htmlInnerList","htmlList","_loop","_context8","activePolls","abrupt","mark","no","yes","desc","yesNoId","pollhtml","_context7","toString","style","textAlign","onClick","switchDisplay","id","fontSize","splice","marginLeft","marginRight","delegateYield","getMulti","_callee8","_loop2","_context10","tempResults","tempOptions","optionList","_context9","displayDashboard","_callee9","_context11","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","web3Modal","Web3Modal","connect","provider","ID","document","getElementById","connectEthereum","_this2","href","location","reload","placeholder","value","onChange","target","color","maxLength","width","data-counter-label","height","split","fontWeight","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a92364c9.chunk.js","sourcesContent":["import Web3 from 'web3';\r\n\r\nconst web3 = new Web3(window.web3.currentProvider);\r\n\r\nexport default web3;","import web3 from './web3';\r\n\r\nconst address = '0x2907c2476ef38579a9e6650241da80ec1a8225ce';\r\n\r\nconst abi = \r\n[\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"activePolls\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"pollHash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"pollStatus\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"isOpen\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"isPublic\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"yes\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"no\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"total\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"allowed\",\r\n\t\t\t\t\"type\": \"address[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"pollHash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"cancelPoll\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"pollHash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getName\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"polls\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"isClosed\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"isPublic\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"creator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"name\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"description\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"yesVotes\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"noVotes\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"totalVotes\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"start\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"expiration\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"pollHash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getDesc\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"pollHash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"isExpired\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"description\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"name\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"isPublic\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"allowed\",\r\n\t\t\t\t\"type\": \"address[]\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"expiration\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"createPoll\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"name\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"creator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"calcPollHash\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"pure\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"pollHash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"voteChoice\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"vote\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ownedPolls\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"pollHash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"allowed\",\r\n\t\t\t\t\"type\": \"address[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"addAllowedUsers\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"archive\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"isClosed\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"isPublic\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"creator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"name\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"description\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"yesVotes\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"noVotes\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"totalVotes\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"start\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"expiration\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n];\r\n\r\nexport default new web3.eth.Contract(abi, address);\r\n","import web3 from './web3';\r\n\r\nconst address = '0xd17C31De7eb280016001f87F5E0Efd0146fC3cc1';\r\n\r\nconst abi = \r\n[\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"activePolls\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"pollHash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"pollStatus\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"isOpen\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"isPublic\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"options\",\r\n\t\t\t\t\"type\": \"string[]\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"results\",\r\n\t\t\t\t\"type\": \"uint256[]\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"allowed\",\r\n\t\t\t\t\"type\": \"address[]\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"total\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"pollHash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"cancelPoll\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"pollHash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getName\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"polls\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"isClosed\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"isPublic\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"creator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"name\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"description\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"totalVotes\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"start\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"expiration\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"pollHash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getDesc\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"pollHash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"isExpired\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"name\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"creator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"calcPollHash\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"pure\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"pollHash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"voteChoice\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"vote\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ownedPolls\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"pollHash\",\r\n\t\t\t\t\"type\": \"bytes32\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"allowed\",\r\n\t\t\t\t\"type\": \"address[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"addAllowedUsers\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"description\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"name\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"options\",\r\n\t\t\t\t\"type\": \"string[]\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"allowed\",\r\n\t\t\t\t\"type\": \"address[]\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"isPublic\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"expiration\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"createPoll\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"archive\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"isClosed\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"isPublic\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"creator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"name\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"description\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"totalVotes\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"start\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"expiration\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n];\r\n\r\nexport default new web3.eth.Contract(abi, address);","import React, {Component} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nclass Chart extends Component {\r\n\r\n\r\n    static defaultProps = {\r\n        noData: 0,\r\n        yesData: 0\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chartData: {\r\n                labels: ['No','Yes'],\r\n                datasets: [{\r\n                    label: 'Votes',\r\n                    data: [this.props.noData,this.props.yesData,0],\r\n                    backgroundColor:[\r\n                        'rgba(237, 45, 45,0.7)',\r\n                        'rgba(28, 181, 28,0.7)'\r\n                    ]\r\n                }]\r\n            }\r\n        }\r\n    }\r\n\r\n    test() {\r\n        console.log(this.props.noData);\r\n        console.log(this.props.yesData);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.test();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"chart\">\r\n            <Bar \r\n                data = {this.state.chartData}\r\n                options = {{\r\n                    title: {\r\n                        display:true,\r\n                        text: 'Poll Voting Data'\r\n                    },\r\n                    legend: {\r\n                        display: false\r\n                    }\r\n                }}\r\n            />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chart;","import React, {Component} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nclass MultiChart extends Component {\r\n\r\n\r\n    static defaultProps = {\r\n        labels: [],\r\n        results: [],\r\n        bcgColors: [],\r\n\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chartData: {\r\n                labels: this.props.labels,\r\n                datasets: [{\r\n                    label: 'Votes',\r\n                    data: this.props.results,\r\n                    backgroundColor:this.props.bcgColors\r\n                }]\r\n            }\r\n        }\r\n    }\r\n\r\n    test() {\r\n        console.log(this.props.labels);\r\n        console.log(this.props.results);\r\n        console.log(this.props.bcgColors);\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.test();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"chart\">\r\n            <Bar \r\n                data = {this.state.chartData}\r\n                options = {{\r\n                    title: {\r\n                        display:true,\r\n                        text: 'Poll Voting Data'\r\n                    },\r\n                    legend: {\r\n                        display: false\r\n                    }\r\n                }}\r\n            />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MultiChart;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Web3 from \"web3\";\r\nimport yesNo from './yesNo';\r\nimport multiData from './multiData';\r\nimport Chart from './components/Chart';\r\nimport MultiChart from './components/Multichart';\r\nimport Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    web3: {},\r\n    // General Poll State Variables\r\n    user: '',\r\n    userMessage:'Not Connected',\r\n    pollhash: '',\r\n    pollType: '',\r\n    pollName: '',\r\n    pollDescription: '',\r\n    ispublic: '',\r\n    allowed: [],\r\n    isallowed: false,\r\n    spinnerdisplay: 'none',\r\n    votecasted: 'none',\r\n    expiration: 0,\r\n    // Yes/No State Variables\r\n    yesVotes: '',\r\n    noVotes: '',\r\n    chart: '',\r\n    yesNoDisplay: 'none',\r\n    // Multi-Data State Variables\r\n    options: [],\r\n    results: [],\r\n    multiChart: '',\r\n    multiDataDisplay: 'none',\r\n    multiDataHTML: [],\r\n    voteOptionsHTML: [],\r\n    voteChoice: 0,\r\n    votebtndisplay: 'none',\r\n    colorList: ['#C7CEEA','#B5EAD7','#E2F0CB','#FFDAC1','#FFB7B2'],\r\n    modColorList: [],\r\n    //Display variables for each option\r\n    o1: 'none',\r\n    o2: 'none',\r\n    o3: 'none',\r\n    o4: 'none',\r\n    o5: 'none',\r\n    // Diplay of the website sectioins\r\n    searchdisplay: 'initial',\r\n    createdisplay: 'none',\r\n    mydisplay: 'none',\r\n    // Voting Options \r\n    option1: '',\r\n    option2: '',\r\n    option3: '',\r\n    option4: '',\r\n    option5: '',\r\n    // Step variables for creating poll\r\n    step: '1',\r\n    hasPassed: false,\r\n    isready: 0,\r\n    buttonText: 'Next Steps',\r\n    createspinner: 'none',\r\n    // Display of Create Poll Sections\r\n    ispublicDisplay: 'none',\r\n    pollTypeDisplay: 'initial',\r\n    enterNameDisplay: 'none',\r\n    expirationDisplay: 'none',\r\n    optionsDisplay: 'none',\r\n    allowedDisplay: 'none',\r\n    createpolldisplay: 'none',\r\n    // Poll Dashboard\r\n    pollHashListYesNo: [],\r\n    pollHashListMulti: [],\r\n    yesNoHTML: [],\r\n    multiHTML: [],\r\n    multiPollHashDisplay: [],\r\n    dashboardSpinner: 'none'\r\n  };\r\n  \r\n\r\n  async connectEthereum() {\r\n    \r\n    const providerOptions = {\r\n      walletconnect: {\r\n        package: WalletConnectProvider, // required\r\n        options: {\r\n          infuraId: \"INFURA_ID\" // required\r\n        }\r\n      }\r\n    };\r\n    \r\n    const web3Modal = new Web3Modal({\r\n      providerOptions // required\r\n    });\r\n    \r\n    const provider = await web3Modal.connect();\r\n    const web3 = new Web3(provider);\r\n    this.web3 = web3;\r\n    if (web3) {\r\n      const accounts = await web3.eth.getAccounts();\r\n      this.setState({user: accounts[0]});\r\n      this.setState({userMessage: 'Current User:'});\r\n      return web3;\r\n    }\r\n    else {\r\n      alert(\"Please install an Ethereum-compatible browser or extension like MetaMask to use this dApp\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Determine and Initialize the User\r\n  getUser = async (event) => {\r\n    try {\r\n\r\n    }\r\n    catch (e) {\r\n      this.setState({user: ''});\r\n      this.setState({userMessage: ''});\r\n      this.setState({mustHave: 'You Must Have Metamask or an Ethereum browser in order to use this DApp. Recommended:' + <a href=\"https://metamask.io\">\"metamask.io\"</a>})\r\n    }\r\n  }\r\n  \r\n// Search Poll, return status if it exists\r\n  searchPoll = async (event) => {\r\n    try {\r\n      const accounts = await this.web3.eth.getAccounts();\r\n\r\n      if (this.state.pollhash === '') {\r\n        alert(\"This Poll Hash does not exist or is not valid\");\r\n      }\r\n      else if (this.state.pollType === '') {\r\n        alert('Please select the poll type.');\r\n      }\r\n      else if (this.state.pollType === 'yesNo') {\r\n        // Hide MultiData Poll\r\n        this.setState({multiDataDisplay: 'none'});\r\n\r\n        //Fetch Data from Ethereum\r\n        const status = await yesNo.methods.pollStatus(this.state.pollhash).call({\r\n          from: accounts[0]\r\n        });\r\n\r\n        //Set Poll Properties\r\n        let novotes = parseInt(status['no']);\r\n        let yesvotes = parseInt(status['yes']);\r\n        this.setState({noVotes: [novotes]});\r\n        this.setState({yesVotes: yesvotes});\r\n        this.setState({ispublic: status['isPublic']});\r\n        this.setState({allowed: status['allowed']});\r\n        this.setState({pollDescription: await yesNo.methods.getDesc(this.state.pollhash).call()});\r\n        this.setState({pollName: await yesNo.methods.getName(this.state.pollhash).call()}); \r\n        this.setState({yesNoDisplay: 'initial'});\r\n\r\n        for (var i = 0; i < this.state.allowed.length; i++) {\r\n          if (this.state.allowed[i] === accounts[0]) {\r\n            this.setState({isallowed: true});\r\n            this.setState({votebtndisplay: 'initial'});\r\n          }\r\n        }\r\n        if (this.state.allowed.length === 0) {\r\n          this.setState({votebtndisplay: 'initial'});\r\n          this.setState({isallowed: true});\r\n        }\r\n        else if (this.state.isallowed === false) {\r\n          this.setState({allowedmessage: \"You are not allowed to vote on this poll.\"});\r\n        }\r\n\r\n        // Checks if poll is expired\r\n        const isexpired = await yesNo.methods.isExpired(this.state.pollhash).call();\r\n        if (isexpired === true) {\r\n          this.setState({allowedmessage: \"This poll has expired\"});\r\n          this.setState({votebtndisplay: 'none'});\r\n        }\r\n        \r\n        //Create Chart\r\n        this.setState({chart: <Chart yesData={parseInt(this.state.yesVotes)} noData={parseInt(this.state.noVotes)} redraw/>});\r\n      }\r\n      else if (this.state.pollType === 'multiData') {\r\n        // Hide YesNo Poll\r\n        this.setState({yesNoDisplay: 'none'});    \r\n\r\n        //Fetch Poll Data from Ethereum\r\n        const status = await multiData.methods.pollStatus(this.state.pollhash).call({\r\n          from: accounts[0]\r\n        });\r\n\r\n        // Set Poll Property Values\r\n        let resultss = status['results'];\r\n        let optionss = status['options'];\r\n        let allowedd = status['allowed'];\r\n\r\n        this.setState({results: resultss});\r\n        this.setState({options: optionss});\r\n        this.setState({allowed: allowedd});\r\n        this.setState({ispublic: status['isPublic']});\r\n        this.setState({pollDescription: await multiData.methods.getDesc(this.state.pollhash).call()});\r\n        this.setState({pollName: await multiData.methods.getName(this.state.pollhash).call()});\r\n        \r\n\r\n        // Check if user is allowed and display appropriately\r\n\r\n        for (var y = 0; y < this.state.allowed.length; y++) {\r\n          if (this.state.allowed[y] === accounts[0]) {\r\n            this.setState({isallowed: true});\r\n            this.setState({votebtndisplay: 'initial'});\r\n          } \r\n        }\r\n        if (this.state.allowed.length === 0) {\r\n          this.setState({votebtndisplay: 'initial'});\r\n          this.setState({isallowed: true});\r\n        }\r\n        else if (this.state.isallowed === false) {\r\n          this.setState({allowedmessage: \"You are not allowed to vote on this poll.\"});\r\n        }\r\n\r\n        // Checks if poll is expired\r\n        const isexpired = await multiData.methods.isExpired(this.state.pollhash).call();\r\n        if (isexpired === true) {\r\n          this.setState({allowedmessage: \"This poll has expired\"});\r\n          this.setState({votebtndisplay: 'none'});\r\n        }\r\n\r\n        // Create Proper Color List & Pass in Values to MultiChart\r\n        this.setState({modColorList: this.state.colorList.slice(0,this.state.colorList.length-1)});\r\n        this.setState({multiChart: <MultiChart labels={this.state.options} results={this.state.results} bcgColors={this.state.modColorList} redraw/>})\r\n\r\n\r\n        // Manually set display values for option list *MUST IMPROVE\r\n        if(this.state.options.length === 5) {\r\n          this.setState({o1: \"initial\"});\r\n          this.setState({o2: \"initial\"});\r\n          this.setState({o3: \"initial\"});\r\n          this.setState({o4: \"initial\"});\r\n          this.setState({o5: \"initial\"});\r\n        } else if(this.state.options.length === 4) {\r\n          this.setState({o1: \"initial\"});\r\n          this.setState({o2: \"initial\"});\r\n          this.setState({o3: \"initial\"});\r\n          this.setState({o4: \"initial\"});\r\n        } else if(this.state.options.length === 3) {\r\n          this.setState({o1: \"initial\"});\r\n          this.setState({o2: \"initial\"});\r\n          this.setState({o3: \"initial\"});\r\n        } else if(this.state.options.length === 2) {\r\n          this.setState({o1: \"initial\"});\r\n          this.setState({o2: \"initial\"});\r\n        }\r\n        // Display Multi Data Poll\r\n        this.setState({multiDataDisplay: 'initial'});\r\n      }\r\n    } \r\n    catch(e) {\r\n      console.log(e);\r\n      alert(\"Please make sure the pollhash is valid. Otherwise ensure that either metamask is installed and you are logged into it or you are using an Ethereum Browser\");\r\n    }\r\n  }\r\n\r\n  // Vote Yes on a Yes/No Poll\r\n  voteYes = async (event) => {\r\n    var bool = false;\r\n    try {\r\n      const accounts = await this.web3.eth.getAccounts();\r\n      bool = true;\r\n      this.setState({spinnerdisplay: \"initial\"});\r\n\r\n      await yesNo.methods.vote(this.state.pollhash,true).send({\r\n        from: accounts[0]\r\n      });\r\n      this.setState({spinnerdisplay: 'none'});\r\n      this.setState({votecasted: 'initial'});\r\n    }\r\n    catch (e) {\r\n      if (bool === false) {\r\n        console.log(e);\r\n        alert(\"Please make sure either metamask is installed and you are logged into it or you are using an Ethereum Browser\");\r\n      } else{\r\n      this.setState({spinnerdisplay: \"none\"});\r\n      this.setState({votecasted: 'initial'});\r\n      }\r\n    }\r\n  }\r\n\r\n  // Vote NO on a Yes/No Poll\r\n  voteNo = async (event) => {\r\n    var bool = false\r\n    try {\r\n      const accounts = await this.web3.eth.getAccounts();\r\n      bool = true;\r\n      this.setState({spinnerdisplay: \"initial\"});\r\n      await yesNo.methods.vote(this.state.pollhash,false).send({\r\n        from: accounts[0]\r\n      });\r\n      this.setState({spinnerdisplay: \"none\"});\r\n      this.setState({votecasted: 'initial'});\r\n    }\r\n    catch (e) {\r\n      if (bool === false) {\r\n        console.log(e);\r\n        alert(\"Please make sure either metamask is installed and you are logged into it or you are using an Ethereum Browser\");\r\n      } else{\r\n      this.setState({spinnerdisplay: \"none\"});\r\n      this.setState({votecasted: 'initial'});\r\n      }\r\n    }\r\n  }\r\n\r\n  // Cast vote on MultiData POll\r\n  multiVote = async (event) => {\r\n    var bool = false;\r\n    try {\r\n      const accounts = await this.web3.eth.getAccounts();\r\n\r\n      bool = true;\r\n      this.setState({spinnerdisplay: \"initial\"});\r\n\r\n      await multiData.methods.vote(this.state.pollhash,this.state.voteChoice+1).send({\r\n        from: accounts[0]\r\n      });\r\n      this.setState({spinnerdisplay: \"none\"});\r\n      this.setState({votecasted: 'initial'});\r\n    }\r\n    catch (e) {\r\n      if (bool === false) {\r\n        console.log(e);\r\n        alert(\"Please make sure either metamask is installed and you are logged into it or you are using an Ethereum Browser\");\r\n      } else{\r\n      this.setState({spinnerdisplay: \"none\"});\r\n      this.setState({votecasted: 'initial'});\r\n      }\r\n    }\r\n  }\r\n\r\n  // Algorithm for going through the process of creating any type of poll.\r\n  nextstep = async (event) => {\r\n    try {\r\n      let newstep = 1;\r\n      if (parseInt(this.state.step) < 6) {\r\n        if (this.state.step === '1') {\r\n          this.setState({pollTypeDisplay: 'none'});\r\n          this.setState({ispublicDisplay: 'initial'});\r\n        } \r\n        else if (this.state.step === 2) {\r\n          this.setState({ispublicDisplay: 'none'});\r\n          this.setState({enterNameDisplay: 'initial'});\r\n        }\r\n        else if (this.state.step === 3 ) {\r\n          this.setState({enterNameDisplay: 'none'});\r\n          this.setState({expirationDisplay: 'initial'});\r\n          if (this.state.ispublic === true && this.state.pollType === 'yesNo') {\r\n            newstep+=2;\r\n          }\r\n        }\r\n        else if (this.state.pollType === \"multiData\" && this.state.hasPassed === false) {\r\n          this.setState({expirationDisplay: 'none'});\r\n          this.setState({optionsDisplay: 'initial'});\r\n          this.setState({hasPassed: true});\r\n          if(this.state.ispublic === true) {\r\n            newstep+=1;\r\n          }\r\n        }\r\n        else if (this.state.ispublic === false) {\r\n          this.setState({optionsDisplay: 'none'});\r\n          this.setState({expirationDisplay: 'none'});\r\n          this.setState({allowedDisplay: 'initial'});\r\n          newstep+=1;\r\n        }\r\n      }\r\n      else if (this.state.ispublic === true && this.state.pollType === 'multiData') {\r\n        if (this.state.isready > 0) {\r\n          this.setState({createspinner: 'initial'});\r\n          const accounts = await this.web3.eth.getAccounts();\r\n          const newPollHash = await multiData.methods.calcPollHash(this.state.pollName,accounts[0]).call();\r\n\r\n          await this.setState({pollhash: newPollHash});\r\n\r\n          await multiData.methods.createPoll(this.state.pollDescription,this.state.pollName,\r\n            [this.state.option1,this.state.option2,this.state.option3,this.state.option4,this.state.option5],\r\n            [],true,this.state.expiration*3600).send({\r\n            from: accounts[0]\r\n          });\r\n\r\n        }\r\n        else {\r\n          this.setState({isready: 1});\r\n          this.setState({createpolldisplay: 'initial'});\r\n          this.setState({optionsDisplay: 'none'});\r\n          this.setState({expirationDisplay: 'none'});\r\n          this.setState({buttonText: 'Create Your Poll'});\r\n        }\r\n      }\r\n      else if (this.state.ispublic === false && this.state.pollType === 'multiData') {\r\n        if (this.state.isready > 0) {\r\n          this.setState({createspinner: 'initial'});\r\n          const accounts = await this.web3.eth.getAccounts();\r\n\r\n          let newArr = []\r\n\r\n          for (var x = 0; x < this.state.allowed.length; x++) {\r\n            newArr.push(this.state.allowed[x].replace(/^\\s+|\\s+$/g, ''));\r\n          }\r\n\r\n          await this.setState({allowed: newArr});\r\n\r\n          const newPollHash = await multiData.methods.calcPollHash(this.state.pollName,accounts[0]).call();\r\n\r\n          await this.setState({pollhash: newPollHash});\r\n\r\n          await multiData.methods.createPoll(this.state.pollDescription,this.state.pollName,\r\n            [this.state.option1,this.state.option2,this.state.option3,this.state.option4,this.state.option5]\r\n            ,this.state.allowed,false,this.state.expiration*3600).send({\r\n            from: accounts[0]\r\n          });\r\n        }\r\n        else {\r\n          this.setState({isready: 1});\r\n          this.setState({createpolldisplay: 'initial'});\r\n          this.setState({optionsDisplay: 'none'});\r\n          this.setState({expirationDisplay: 'none'});\r\n          this.setState({allowedDisplay: 'none'});\r\n          this.setState({buttonText: 'Create Your Poll'});\r\n        }\r\n      }\r\n      else if (this.state.ispublic === true && this.state.pollType === \"yesNo\") {\r\n        if (this.state.isready > 0) {\r\n          this.setState({createspinner: 'initial'});\r\n          const accounts = await this.web3.eth.getAccounts();\r\n\r\n          const newPollHash = await yesNo.methods.calcPollHash(this.state.pollName,accounts[0]).call();\r\n\r\n          await this.setState({pollhash: newPollHash});\r\n\r\n          await yesNo.methods.createPoll(this.state.pollDescription,this.state.pollName,true,[],this.state.expiration*3600).send({\r\n            from: accounts[0]\r\n          });\r\n\r\n        }\r\n        else {\r\n          this.setState({isready: 1});\r\n          this.setState({createpolldisplay: 'initial'});\r\n          this.setState({optionsDisplay: 'none'});\r\n          this.setState({expirationDisplay: 'none'});\r\n          this.setState({buttonText: 'Create Your Poll'}); \r\n        }\r\n      }\r\n      else if (this.state.ispublic === false && this.state.pollType === \"yesNo\") {\r\n        if (this.state.isready > 0) {\r\n          this.setState({createspinner: 'initial'});\r\n          const accounts = await this.web3.eth.getAccounts();\r\n          let newArr = []\r\n\r\n          for (var y = 0; y < this.state.allowed.length; y++) {\r\n            newArr.push(this.state.allowed[y].replace(/^\\s+|\\s+$/g, ''));\r\n          }\r\n          const newPollHash = await yesNo.methods.calcPollHash(this.state.pollName,accounts[0]).call();\r\n\r\n          await this.setState({pollhash: newPollHash});\r\n\r\n          await this.setState({allowed: newArr});\r\n\r\n          await yesNo.methods.createPoll(this.state.pollDescription,this.state.pollName,false,this.state.allowed,this.state.expiration*3600).send({\r\n            from: accounts[0]\r\n          });\r\n        }\r\n        else {\r\n          this.setState({isready: 1});\r\n          this.setState({createpolldisplay: 'initial'});\r\n          this.setState({optionsDisplay: 'none'});\r\n          this.setState({expirationDisplay: 'none'});\r\n          this.setState({allowedDisplay: 'none'});\r\n          this.setState({buttonText: 'Create Your Poll'}); \r\n        }\r\n      }\r\n      newstep+=parseInt(this.state.step);\r\n      this.setState({step: newstep});\r\n    }\r\n    catch(e) {\r\n      this.setState({createspinner: 'none'});\r\n    }\r\n  }\r\n\r\n  // Retrieves all Yes/No Polls for a given user\r\n  getYesNo = async (event) => {\r\n    let hashlist = [];\r\n    let counter = 0;\r\n    const accounts = await this.web3.eth.getAccounts();\r\n\r\n    // fetching poll Hashes for yesNo\r\n    while(counter < 256) {\r\n      try {\r\n        const hash = await yesNo.methods.activePolls(this.state.user, counter).call();\r\n        console.log(hash);\r\n        if (hash !== null)\r\n          hashlist.push(hash);\r\n        else\r\n          break;\r\n        counter++;\r\n      }\r\n      catch(e) {\r\n        break;\r\n      }\r\n    }\r\n    await this.setState({pollHashListYesNo: hashlist});\r\n    console.log(this.state.pollHashListYesNo);\r\n    // get YesNo HTML\r\n    let htmlInnerList = []\r\n    let htmlList = [<h2>Yes/No Polls</h2>]\r\n    for (var x = 0; x < this.state.pollHashListYesNo.length;x++){\r\n\r\n      const status = await yesNo.methods.pollStatus(this.state.pollHashListYesNo[x]).call({\r\n        from: accounts[0]\r\n      });\r\n\r\n      const no = parseInt(status['no']);\r\n      const yes = parseInt(status['yes']);\r\n      const name = await yesNo.methods.getName(this.state.pollHashListYesNo[x]).call();\r\n      const desc = await yesNo.methods.getDesc(this.state.pollHashListYesNo[x]).call();\r\n      const yesNoId = \"yesNo\"+x.toString();\r\n\r\n      let pollhtml = \r\n      <div className=\"column\" style={{textAlign:'center'}}>\r\n      <h3>{name}</h3>\r\n      <p>{desc}</p><p>Yes Votes: {yes}</p><p>No Votes: {no}</p>\r\n      <button className=\"pollhashbutton\" onClick={event=> this.switchDisplay(yesNoId)}>\r\n        Show Poll ID\r\n      </button>\r\n      <br/>\r\n      <p id ={yesNoId} style={{fontSize: '11px',display: 'none'}}>{this.state.pollHashListYesNo[x]}</p>\r\n      </div>\r\n      \r\n      htmlInnerList.splice(htmlInnerList.length-2,0,pollhtml);\r\n\r\n      if(x+1 > 2 && ((x+1) % 3 === 0)) {\r\n        htmlList.push(htmlInnerList);\r\n        htmlList.push([<br/>]);\r\n        htmlList.push([<span style={{marginLeft: '10%', marginRight: '10%'}}><hr/></span>]);\r\n        htmlInnerList = [];\r\n      } else if (x+1 === this.state.pollHashListYesNo.length){\r\n        htmlList.push(htmlInnerList);\r\n        htmlList.push([<br/>]);\r\n        htmlInnerList = [];\r\n      }\r\n    }\r\n\r\n    this.setState({yesNoHTML: htmlList});\r\n\r\n  }\r\n\r\n  // Retrieves all Multi-Data Polls for a given user\r\n  getMulti = async (event) => {\r\n    let counter = 0;\r\n    let hashlist = [];\r\n    const accounts = await this.web3.eth.getAccounts();\r\n\r\n    // fetching poll hashes for multiData\r\n    while(counter<256) {\r\n      try{\r\n        let hash = await multiData.methods.activePolls(this.state.user,counter).call();\r\n        console.log(hash);\r\n        if (hash !== null)\r\n          hashlist.push(hash);\r\n        else\r\n          break\r\n        counter++;\r\n      }\r\n      catch(e){\r\n        break;\r\n      }\r\n    }\r\n    await this.setState({pollHashListMulti: hashlist});\r\n    console.log(this.state.pollHashListMulti);\r\n    // get MultiData HTML\r\n    let htmlInnerList = [];\r\n    let htmlList = [<h2>Multi-Data Polls</h2>];\r\n    for (var y = 0; y < this.state.pollHashListMulti.length;y++){\r\n\r\n      const status = await multiData.methods.pollStatus(this.state.pollHashListMulti[y]).call({\r\n        from: accounts[0]\r\n      });\r\n\r\n      const tempResults = status['results'];\r\n      const tempOptions = status['options'];\r\n      const name = await multiData.methods.getName(this.state.pollHashListMulti[y]).call();\r\n      const desc = await multiData.methods.getDesc(this.state.pollHashListMulti[y]).call();\r\n      // Only use the options being used\r\n      let optionList = []\r\n      for (var i =0; i < tempOptions.length; i++) {\r\n        if (tempOptions[i] !== '')\r\n          optionList.push(<p >{tempOptions[i]+': '+tempResults[i]}</p>);\r\n      }\r\n\r\n      const id = 'multi'+y.toString();\r\n      let pollhtml = \r\n      <div className=\"column\" style={{textAlign: 'center'}}>\r\n      <h3>{name}</h3>\r\n      <p>{desc}</p>\r\n      {optionList}\r\n      <button className=\"pollhashbutton\" onClick={event=> this.switchDisplay(id)}>\r\n        Show Poll ID\r\n      </button>\r\n      <br/>\r\n      <p id ={id} style={{fontSize: '11px',display: 'none'}}>{this.state.pollHashListMulti[y]}</p>\r\n      </div>;\r\n      \r\n      htmlInnerList.splice(htmlInnerList.length-2,0,pollhtml);\r\n\r\n      if(y+1 > 2 && ((y+1) % 3 === 0)) {\r\n        htmlList.push(htmlInnerList);\r\n        htmlList.push([<br/>]);\r\n        htmlList.push([<span style={{marginLeft: '10%', marginRight: '10%'}}><hr/></span>]);\r\n        htmlInnerList = [];\r\n      } else if (y+1 === this.state.pollHashListMulti.length){\r\n        htmlList.push(htmlInnerList);\r\n        htmlList.push([<br/>]);\r\n        htmlInnerList = [];\r\n      }\r\n    }\r\n\r\n    this.setState({multiHTML: htmlList});\r\n  }\r\n\r\n  // pass in an elements id to toggle its display value\r\n  switchDisplay(ID) {\r\n    if(document.getElementById(ID).style.display === \"none\") {\r\n      document.getElementById(ID).style.display = \"inline\";\r\n      console.log('success');\r\n    }\r\n    else\r\n      document.getElementById(ID).style.display = \"none\";\r\n    }\r\n\r\n  // Display Voting Dashboard and spinners until Dashboard loads\r\n  displayDashboard = async (event) =>{\r\n    await this.setState({createdisplay: 'none', mydisplay: 'initial', searchdisplay: 'none'});\r\n    await this.setState({dashboardSpinner: 'initial'});\r\n    await this.getMulti();\r\n    await this.getYesNo();\r\n    await this.setState({dashboardSpinner: 'none'});\r\n  }\r\n\r\n  // Fetch User Only once, when the user opens the app\r\n  componentDidMount() {\r\n    this.connectEthereum();\r\n    this.getUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n\r\n        <div className = \"header\">\r\n          <h1><a href=\"https://ethpolls.com\" className =\"title\">EthPolls</a></h1>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n        </div>\r\n\r\n        <br/>\r\n\r\n        <div className=\"subheader\">\r\n          <p className = \"user\"><span className=\"pulsate\"><span className=\"userMessage\">{this.state.userMessage}</span> {this.state.user}</span></p>\r\n          <span className = \"switches\">\r\n            <button className=\"astext\" onClick={event=> window.location.reload()}>Search for a Poll</button> <span className = \"lines\"> | </span> \r\n            <button className=\"astext\" onClick= {event=> this.setState({createdisplay: 'initial', mydisplay: 'none', searchdisplay: 'none'})}>Create a Poll</button> <span className = \"lines\"> | </span> \r\n            <button className=\"astext\" onClick= {event=> this.displayDashboard()}>View My Polls</button>\r\n          </span>\r\n        </div>\r\n\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n\r\n        {/*********** Search for Poll *************/}\r\n        <div className=\"pollSearch\" style={{display: this.state.searchdisplay}}>\r\n        <div className=\"searchBox\">\r\n          <h1>Enter Poll ID</h1>\r\n          <p>Enter the Poll ID of the poll you wish to search then select its poll type</p>\r\n          <br/>\r\n          <br/>\r\n          <input type=\"text\" placeholder=\"Type Poll ID Here ...\" pollhash = {this.state.value} onChange={event=> this.setState({pollhash: event.target.value})}/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n        </div>\r\n\r\n        <div className=\"radioButtons\">\r\n        <label className=\"container\">Yes/No Poll\r\n            <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({pollType: 'yesNo'})}/>\r\n            <span className=\"checkmark\"></span>\r\n          </label>\r\n\r\n          <label className=\"container\">Multi-Data Poll\r\n            <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({pollType: 'multiData'})}/>\r\n            <span className=\"checkmark\"></span>\r\n        </label>\r\n        </div>\r\n\r\n        <br/>\r\n        <br/>\r\n\r\n        <div className =\"centerbtn\">\r\n          <button onClick={this.searchPoll} className=\"button\">Search</button>\r\n        </div>\r\n\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        {/******************************* YES NO POLL  ************************************/}\r\n        <div className = \"poll\" id=\"yesNo\" style={{display: this.state.yesNoDisplay}}>\r\n          <p>Poll Name:</p>\r\n          <h1>{this.state.pollName}</h1>\r\n          <p>Description:</p>\r\n          <h4>{this.state.pollDescription}</h4>\r\n          <h4><span style={{textAlign: \"left\"}}>No Votes: {this.state.noVotes}</span>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <span style={{textAlign: \"right\"}}>Yes Votes: {this.state.yesVotes}</span></h4>\r\n          <div className=\"chart\">\r\n          {this.state.chart}\r\n          <p>{this.state.allowedmessage}</p>\r\n          <span><button style={{display: this.state.votebtndisplay}} onClick={this.voteNo}id=\"noBtn\">Vote No</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button style={{display: this.state.votebtndisplay}} onClick={this.voteYes} id=\"yesBtn\">Vote Yes</button></span>\r\n          </div>\r\n          <br/>\r\n          <div className=\"loading-spinner\" style={{display: this.state.spinnerdisplay, textAlign: 'center'}}>\r\n          <div className=\"load-1\">\r\n                <p className=\"pulsate\">Voting...(Approximately 1 Minute)</p>\r\n                <div className=\"line\" id =\"clearline\"></div>\r\n                <div className=\"line\"></div>\r\n                <div className=\"line\"></div>\r\n                <div className=\"line\"></div>\r\n            </div>\r\n          </div>\r\n          <div className = \"center\">\r\n          <h4 style={{display: this.state.votecasted, textAlign: 'center', color: '#383838'\t}}>Your vote has been casted! Refresh the page and re-enter the poll hash to see the updated results!</h4>\r\n          </div>\r\n          <br/>\r\n          <br/>\r\n        </div>\r\n\r\n        {/******************************* MULTI DATA POLL  ************************************/}\r\n        <div className = \"poll\" id=\"multiData\" style={{display: this.state.multiDataDisplay}}>\r\n          <p>Poll Name:</p>\r\n          <h1>{this.state.pollName}</h1>\r\n          <p>Description:</p>\r\n          <h4>{this.state.pollDescription}</h4>\r\n          {this.state.multiDataHTML}\r\n          <div className = \"multiChart\">\r\n            {this.state.multiChart}\r\n          </div>\r\n          <div className=\"radioButtons\">\r\n            <label style={{display:this.state.o1}} className=\"container\"> {this.state.options[0]}\r\n              <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({voteChoice: 0})}/>\r\n              <span className=\"checkmark\"></span>\r\n            </label>\r\n          </div>\r\n          <div className=\"radioButtons\">\r\n            <label style={{display:this.state.o2}} className=\"container\">{this.state.options[1]}\r\n                <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({voteChoice: 1})}/>\r\n                <span className=\"checkmark\"></span>\r\n            </label>\r\n          </div>\r\n          <div className=\"radioButtons\">\r\n            <label style={{display:this.state.o3}} className=\"container\">{this.state.options[2]}\r\n                <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({voteChoice: 2})}/>\r\n                <span className=\"checkmark\"></span>\r\n            </label>\r\n          </div>\r\n          <div className=\"radioButtons\">\r\n            <label style={{display:this.state.o4}} className=\"container\">{this.state.options[3]}\r\n                <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({voteChoice: 3})}/>\r\n                <span className=\"checkmark\"></span>\r\n            </label>\r\n          </div>\r\n          <div className=\"radioButtons\">\r\n            <label style={{display:this.state.o5}} className=\"container\">{this.state.options[4]}\r\n                <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({voteChoice: 4})}/>\r\n                <span className=\"checkmark\"></span>\r\n            </label>\r\n        </div>\r\n        <p>{this.state.allowedmessage}</p>\r\n          <div className =\"multiBtn\" >\r\n            <button style={{display: this.state.votebtndisplay}} onClick = {this.multiVote} id=\"multiVote\">Vote</button>\r\n          </div>\r\n          <br/>\r\n          <div className=\"loading-spinner\" style={{display: this.state.spinnerdisplay, textAlign: 'center'}}>\r\n          <div className=\"load-1\">\r\n                <p className=\"pulsate\">Voting...(Approximately 1 Minute)</p>\r\n                <div className=\"line\" id =\"clearline\"></div>\r\n                <div className=\"line\"></div>\r\n                <div className=\"line\"></div>\r\n                <div className=\"line\"></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"center\">\r\n          <h4 style={{display: this.state.votecasted, textAlign: 'center', color: '#383838'\t}}>Your vote has been casted! Refresh the page and re-enter the poll hash to see the updated results!</h4>\r\n          </div>\r\n        </div>\r\n        <br/>\r\n        </div>\r\n\r\n        {/******************** Create a Poll ******************* */}\r\n        <div className=\"createPoll\" style={{display: this.state.createdisplay}}>\r\n          <div className=\"searchbox\">\r\n            <h4 style={{marginLeft: '25%'}}>Step {this.state.step}</h4>\r\n          {/** Choose Poll Type (MultiData / YesNo) **/}\r\n          <div style={{display: this.state.pollTypeDisplay}}>\r\n          <h1 style={{textAlign: 'center'}}>Choose Poll Type</h1>\r\n            <p style={{textAlign: 'center'}}>Decide which type of poll you would like to create</p>\r\n            <div className=\"radioButtons\">\r\n        <label className=\"container\">Yes/No Poll\r\n            <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({pollType: 'yesNo'})}/>\r\n            <span className=\"checkmark\"></span>\r\n          </label>\r\n\r\n          <label className=\"container\">Multi-Data Poll\r\n            <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({pollType: 'multiData'})}/>\r\n            <span className=\"checkmark\"></span>\r\n        </label>\r\n        </div>\r\n        </div>\r\n\r\n          {/** Choose Public/Private **/}\r\n        <div style={{display: this.state.ispublicDisplay}}>\r\n        <h1 style={{textAlign: 'center'}}>Choose Poll Type</h1>\r\n            <p style={{textAlign: 'center'}}>Decide which type of poll you would like to create</p>\r\n        <div className=\"radioButtons\" >\r\n        <label className=\"container\">Public\r\n            <input name =\"radio\" type=\"radio\" onClick={event=> this.setState({ispublic: true})}/>\r\n            <span className=\"checkmark\"></span>\r\n          </label>\r\n\r\n          <label className=\"container\">Restricted (only users you choose can vote)\r\n            <input  name =\"radio\" type=\"radio\" onClick={event=> this.setState({ispublic: false})}/>\r\n            <span  className=\"checkmark\"></span>\r\n        </label>\r\n        </div>\r\n        </div>\r\n\r\n          {/* Enter Poll Name and Description */}\r\n        <div style={{display: this.state.enterNameDisplay}}>\r\n          <h1 style={{textAlign: 'center'}}>Enter Poll Name and Description</h1>\r\n          <p style={{textAlign: 'center'}}>Type the name of your poll followed by a description</p>\r\n          <div style={{textAlign: 'center'}}>\r\n          <input onChange={event=> this.setState({pollName: event.target.value})} placeholder=\"Enter Name Here\" id=\"my-text-field\" type=\"text\" maxLength=\"100\" style={{width: '12%', color: 'black'}}/>\r\n          <br/>\r\n          <br/>\r\n          <textarea onChange={event=> this.setState({pollDescription: event.target.value})} id=\"my-textarea\"maxLength=\"500\" data-counter-label=\"\" style={{ height: '300px', width: '300px'}}></textarea>\r\n          </div>      \r\n        </div>\r\n\r\n          {/* Enter Poll Expiration */}\r\n          <div style={{display: this.state.expirationDisplay}}>\r\n          <h1 style={{textAlign: 'center'}}>Decide if your poll will expire</h1>\r\n          <p style={{textAlign: 'center'}}>Choose whether or not your poll will expire. If your poll will not expire, enter 0. Otherwise select the amount of hours it will last.</p>\r\n          <div style={{textAlign: 'center'}}>\r\n            <input onChange={event=> this.setState({expiration: parseInt(event.target.value)})} placeholder=\"Hours\" id=\"my-text-field\" type=\"text\" maxLength=\"15\" style={{width: '8%', color: 'black'}}/>\r\n            <br/>\r\n          </div>  \r\n          </div>\r\n\r\n          {/* Enter options if multi data poll */}\r\n          <div style={{display: this.state.optionsDisplay}}>\r\n          <h1 style={{textAlign: 'center'}}>Enter your Voting Options</h1>\r\n          <p style={{textAlign: 'center'}}>Type in the things that voters will be voting on.</p>\r\n          <div style={{textAlign: 'center'}}>\r\n            <input onChange={event=> this.setState({option1: event.target.value})} placeholder=\"Option 1\" id=\"my-text-field\" type=\"text\"  style={{width: '8%', color: 'black'}}/>\r\n            <br/>\r\n            <input onChange={event=> this.setState({option2: event.target.value})} placeholder=\"Option 2\" id=\"my-text-field\" type=\"text\"  style={{width: '8%', color: 'black'}}/>\r\n            <br/>\r\n            <input onChange={event=> this.setState({option3: event.target.value})} placeholder=\"Option 3\" id=\"my-text-field\" type=\"text\"  style={{width: '8%', color: 'black'}}/>\r\n            <br/>\r\n            <input onChange={event=> this.setState({option4: event.target.value})} placeholder=\"Option 4\" id=\"my-text-field\" type=\"text\"  style={{width: '8%', color: 'black'}}/>\r\n            <br/>\r\n            <input onChange={event=> this.setState({option5: event.target.value})} placeholder=\"Option 5\" id=\"my-text-field\" type=\"text\"  style={{width: '8%', color: 'black'}}/>\r\n            <br/>\r\n          </div>  \r\n          </div>\r\n\r\n          {/* Enter Allowed Users */}\r\n          <div style={{display: this.state.allowedDisplay}}>\r\n          <h1 style={{textAlign: 'center'}}>Enter a comma separated list of users</h1>\r\n          <p style={{textAlign: 'center'}}>Example: 0x74ff48fc3762eB4dC5E579A73ECffCBab4b9939E,0x9E01CBf6e04aBc6157Fe538A4EB03D879B670af0,0xCE43a16E7a848F9c51f41Ef1b77022118527d41A</p>\r\n          <div style={{textAlign: 'center'}}>\r\n            <textarea onChange={event=> this.setState({allowed: event.target.value.split(\",\")})} id=\"my-textarea\" maxLength=\"100000\" data-counter-label=\"\" style={{ height: '300px', width: '300px'}}></textarea>\r\n            <br/>\r\n          </div> \r\n          </div>\r\n\r\n          {/* Create Poll Display */}\r\n          <div style={{display: this.state.createpolldisplay}}>\r\n          <h1 style={{textAlign: 'center'}}>Click the button to create your poll</h1>\r\n          <p style={{textAlign: 'center'}}>Once your poll has been created you will be given the Poll ID. This is used when searching for polls.</p>\r\n          <br/>\r\n          <div style={{display: this.state.createspinner, textAlign: 'center'}}>\r\n          <div className=\"load-1\">\r\n                <p className=\"pulsate\">Creating Poll...(Approximately 1 Minute)</p>\r\n                <div className=\"line\" id =\"clearline\"></div>\r\n                <div className=\"line\"></div>\r\n                <div className=\"line\"></div>\r\n                <div className=\"line\"></div>\r\n            </div>\r\n          </div>\r\n          <h2 id=\"createdPollHash\" style={{textAlign: 'center', fontWeight: 300}}>Your Poll ID: {this.state.pollhash}</h2>\r\n          </div>\r\n\r\n        <br/>\r\n        <div style={{textAlign: 'center'}} >\r\n        <button onClick={event=> this.nextstep()} className=\"button\">{this.state.buttonText}</button>\r\n        </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/***************** Poll Dashboard *****************/}\r\n        <div style={{display: this.state.dashboardSpinner}}>\r\n          <h4 style={{fontWeight: 300, textAlign: 'center'}}>Loading...</h4>\r\n          <div id=\"rect1\" className=\"wave\"></div>\r\n          <br/>\r\n        </div>\r\n        <div style={{display: this.state.mydisplay}}>\r\n        <div>\r\n        {/* Three Column Layout for poll visual */}\r\n        <div id=\"dashwrapper\">\r\n        <div className=\"row\">\r\n          {this.state.yesNoHTML}\r\n        </div>\r\n        </div>\r\n\r\n        <div>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n        </div>\r\n\r\n        <div id=\"dashwrapper\">\r\n        <div className=\"row\">\r\n          {this.state.multiHTML}\r\n        </div>\r\n        </div>\r\n        <br />\r\n        </div>\r\n        </div>\r\n\r\n      {/* End */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}